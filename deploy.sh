#!/bin/bash

# –ï–¥–∏–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –¥–ª—è Linux —Å–µ—Ä–≤–µ—Ä–∞
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–±–∏—Ä–∞–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç –±–µ–∑ –æ—à–∏–±–æ–∫

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –û–°
check_os() {
    if [[ "$OSTYPE" != "linux-gnu"* ]]; then
        error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è Linux —Å–∏—Å—Ç–µ–º!"
        exit 1
    fi
    success "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $(uname -a)"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ Docker Compose"
        exit 1
    fi

    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose"
        exit 1
    fi

    success "Docker –≤–µ—Ä—Å–∏—è: $(docker --version)"
    success "Docker Compose –≤–µ—Ä—Å–∏—è: $(docker-compose --version)"
}

# –°–æ–∑–¥–∞–Ω–∏–µ production.env
setup_env() {
    if [[ ! -f "production.env" ]]; then
        info "–°–æ–∑–¥–∞–Ω–∏–µ production.env —Ñ–∞–π–ª–∞..."
        if [[ ! -f "production.env.example" ]]; then
            error "production.env.example –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
        fi

        cp production.env.example production.env

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è Linux —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—É—Ç—è–º–∏
        sed -i 's|CHANGE_THIS_SECURE_DB_PASSWORD_2024|agb_prod_password_2024|g' production.env
        sed -i 's|CHANGE_THIS_SUPER_SECRET_KEY_IN_PRODUCTION_2024_MIN_32_CHARS_LONG|agb_production_secret_key_2024_secure_32_chars|g' production.env
        sed -i 's|CHANGE_THIS_ADMIN_PASSWORD_IMMEDIATELY_2024|admin_secure_2024|g' production.env
        sed -i 's|postgresql+asyncpg://felix_prod_user:CHANGE_THIS_SECURE_DB_PASSWORD_2024@postgres:5432/agb_felix_prod|postgresql+asyncpg://felix_prod_user:agb_prod_password_2024@postgres:5432/agb_felix_prod|g' production.env
        sed -i 's|http://localhost/api|http://localhost/api|g' production.env

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π –¥–ª—è Linux
        echo "" >> production.env
        echo "# Linux specific paths" >> production.env
        echo "UPLOAD_DIR=/app/uploads" >> production.env
        echo "STATIC_DIR=/app/static" >> production.env

        success "production.env —Å–æ–∑–¥–∞–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è Linux"
    else
        success "production.env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    info "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    mkdir -p uploads/documents uploads/portfolio uploads/profiles ssl backups
    chmod -R 755 uploads ssl backups
    success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –û—á–∏—Å—Ç–∫–∞ Docker
cleanup_docker() {
    info "–û—á–∏—Å—Ç–∫–∞ Docker..."
    docker-compose -f docker-compose.prod.yml down --remove-orphans 2>/dev/null || true
    docker-compose -f docker-compose.prod.offline.yml down --remove-orphans 2>/dev/null || true
    docker system prune -af --volumes 2>/dev/null || true
    docker builder prune -af 2>/dev/null || true
    success "Docker –æ—á–∏—â–µ–Ω"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Docker Hub
check_docker_auth() {
    if ! docker info | grep -q "Username:"; then
        warning "–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ Docker Hub"
        warning "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤:"
        echo "  docker login"
        echo ""
        info "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å offline –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..."
        COMPOSE_FILE="docker-compose.prod.offline.yml"
    else
        USERNAME=$(docker info | grep "Username:" | awk '{print $2}')
        success "–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ Docker Hub –∫–∞–∫: $USERNAME"
        COMPOSE_FILE="docker-compose.prod.yml"
    fi
}

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
build_and_run() {
    info "–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    info "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $COMPOSE_FILE"

    # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
    info "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
    docker-compose -f $COMPOSE_FILE build --no-cache

    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose -f $COMPOSE_FILE up -d

    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (60 —Å–µ–∫—É–Ω–¥)..."
    sleep 60
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    echo ""
    docker-compose -f $COMPOSE_FILE ps

    echo ""
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Nginx
    if curl -f http://localhost >/dev/null 2>&1; then
        success "‚úÖ Nginx –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 80"
    else
        warning "‚ö†Ô∏è Nginx –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 80"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    if curl -f http://localhost:3000 >/dev/null 2>&1; then
        success "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000"
    else
        warning "‚ö†Ô∏è –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∫–µ–Ω–¥–∞
    if curl -f http://localhost:8000/api/health >/dev/null 2>&1; then
        success "‚úÖ –ë–µ–∫–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000"
    else
        warning "‚ö†Ô∏è –ë–µ–∫–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000"
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏
show_info() {
    echo ""
    success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo ""
    info "üåê –î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:"
    echo "  –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç:     http://localhost"
    echo "  –§—Ä–æ–Ω—Ç–µ–Ω–¥:         http://localhost:3000"
    echo "  API –±–µ–∫–µ–Ω–¥–∞:      http://localhost:8000"
    echo "  –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://localhost:8000/docs"
    echo ""
    info "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏:"
    echo "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:   docker-compose -f $COMPOSE_FILE logs -f"
    echo "  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:       docker-compose -f $COMPOSE_FILE down"
    echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å:    docker-compose -f $COMPOSE_FILE restart"
    echo ""
    info "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
    echo "  –°—Ç–∞—Ç—É—Å:           docker-compose -f $COMPOSE_FILE ps"
    echo "  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:    docker stats"
    echo ""
    info "üîê –ê–¥–º–∏–Ω –¥–æ—Å—Ç—É–ø:"
    echo "  –õ–æ–≥–∏–Ω: admin"
    echo "  –ü–∞—Ä–æ–ª—å: admin_secure_2024"
    echo "  (–ò–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞!)"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo ""
    info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ AGB –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Linux —Å–µ—Ä–≤–µ—Ä–µ"
    echo "=================================================="
    echo ""

    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_os
    check_docker

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
    setup_env
    create_directories

    # –û—á–∏—Å—Ç–∫–∞ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    cleanup_docker
    check_docker_auth

    # –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
    build_and_run
    check_status

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    show_info

    echo ""
    success "üéä –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
    echo ""
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-}" in
    "cleanup")
        info "–¢–æ–ª—å–∫–æ –æ—á–∏—Å—Ç–∫–∞ Docker..."
        cleanup_docker
        success "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        ;;
    "status")
        if [[ -f "production.env" ]]; then
            COMPOSE_FILE="docker-compose.prod.yml"
            check_status
        else
            error "production.env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
        fi
        ;;
    "logs")
        if [[ -f "production.env" ]]; then
            COMPOSE_FILE="docker-compose.prod.yml"
            info "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
            docker-compose -f $COMPOSE_FILE logs -f
        else
            error "production.env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
        fi
        ;;
    "stop")
        info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose -f docker-compose.prod.yml down 2>/dev/null || true
        docker-compose -f docker-compose.prod.offline.yml down 2>/dev/null || true
        success "–°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        ;;
    *)
        main
        ;;
esac