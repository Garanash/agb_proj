#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ Felix Platform - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π${NC}"
echo "=================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥
check_command() {
    if ! command -v $1 &> /dev/null; then
        echo -e "${RED}‚ùå –ö–æ–º–∞–Ω–¥–∞ $1 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ Docker Compose${NC}"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–∞–Ω–¥—ã
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–∞–Ω–¥—ã...${NC}"
check_command docker
check_command docker-compose

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${YELLOW}üì¶ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"
docker-compose -f docker-compose.prod.yml down 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ Docker —Å–∏—Å—Ç–µ–º—ã
echo -e "${YELLOW}üßπ –û—á–∏—â–∞–µ–º Docker —Å–∏—Å—Ç–µ–º—É...${NC}"
docker system prune -af --volumes 2>/dev/null || true

# –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ–±—Ä–∞–∑–æ–≤
echo -e "${YELLOW}üóëÔ∏è –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ–±—Ä–∞–∑—ã...${NC}"
docker rmi $(docker images -q) 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${YELLOW}üßπ –û—á–∏—â–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...${NC}"
docker container prune -f 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö volumes
echo -e "${YELLOW}üóÇÔ∏è –û—á–∏—â–∞–µ–º –≤—Å–µ volumes...${NC}"
docker volume prune -f 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö networks
echo -e "${YELLOW}üåê –û—á–∏—â–∞–µ–º –≤—Å–µ networks...${NC}"
docker network prune -f 2>/dev/null || true

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—Ä—Ç 80 —Å–≤–æ–±–æ–¥–µ–Ω
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç 80...${NC}"
if ss -tlnp | grep :80 > /dev/null 2>&1; then
    echo -e "${YELLOW}‚ö†Ô∏è –ü–æ—Ä—Ç 80 –∑–∞–Ω—è—Ç, –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º...${NC}"
    sudo fuser -k 80/tcp 2>/dev/null || true
    sleep 2
fi

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
echo -e "${YELLOW}üèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã...${NC}"
docker-compose -f docker-compose.prod.yml up -d --build

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo -e "${YELLOW}‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"
until docker-compose -f docker-compose.prod.yml exec -T db pg_isready -U felix_user -d agb_felix > /dev/null 2>&1; do
    echo -e "${YELLOW}‚è≥ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–∞, –∂–¥–µ–º...${NC}"
    sleep 5
done
echo -e "${GREEN}‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞!${NC}"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo -e "${YELLOW}üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...${NC}"
docker-compose -f docker-compose.prod.yml exec -T backend python init_db.py 2>/dev/null || {
    echo -e "${YELLOW}‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞${NC}"
}

# –ñ–¥–µ–º –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "${YELLOW}‚è≥ –ñ–¥–µ–º –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker-compose -f docker-compose.prod.yml ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ nginx —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 80
echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ nginx —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 80...${NC}"
if ss -tlnp | grep :80 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Nginx —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 80${NC}"
else
    echo -e "${RED}‚ùå Nginx –Ω–µ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 80${NC}"
    echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ nginx...${NC}"
    docker-compose -f docker-compose.prod.yml logs nginx
    exit 1
fi

# –¢–µ—Å—Ç–∏—Ä—É–µ–º API
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API...${NC}"
if curl -s http://localhost/api/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è API –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤, –∂–¥–µ–º...${NC}"
    sleep 30
    if curl -s http://localhost/api/health > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
    else
        echo -e "${RED}‚ùå API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
        echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ backend...${NC}"
        docker-compose -f docker-compose.prod.yml logs backend
    fi
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo -e "${YELLOW}üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...${NC}"
echo ""
echo -e "${GREEN}==================================${NC}"
echo -e "${GREEN}‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!${NC}"
echo -e "${GREEN}==================================${NC}"
echo ""
echo -e "${BLUE}üåê –î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:${NC}"
echo -e "${GREEN}   –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π: http://localhost${NC}"
echo -e "${GREEN}   –í–Ω–µ—à–Ω–∏–π:   http://172.25.155.26${NC}"
echo ""
echo -e "${BLUE}üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:${NC}"
echo -e "${GREEN}   –õ–æ–≥–∏–Ω: admin${NC}"
echo -e "${GREEN}   –ü–∞—Ä–æ–ª—å: neurofork1${NC}"
echo ""
echo -e "${BLUE}üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo -e "${GREEN}   –õ–æ–≥–∏:     docker-compose -f docker-compose.prod.yml logs${NC}"
echo -e "${GREEN}   –°—Ç–∞—Ç—É—Å:   docker-compose -f docker-compose.prod.yml ps${NC}"
echo -e "${GREEN}   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose -f docker-compose.prod.yml down${NC}"
echo ""
echo -e "${YELLOW}‚è≥ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–æ —á–µ—Ä–µ–∑ 1-2 –º–∏–Ω—É—Ç—ã${NC}"
echo -e "${GREEN}==================================${NC}"
