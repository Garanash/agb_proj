#!/bin/bash

# üöÄ AGB Project - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ä–µ–¥—ã
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

echo "üöÄ AGB Project - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ä–µ–¥—ã"
echo "============================================="

# –ü–æ–ª—É—á–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP=$(curl -s -4 ifconfig.me || curl -s -4 ipinfo.io/ip || curl -s -4 icanhazip.com || echo "localhost")
echo "üåê IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"

echo ""
log_info "–®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
echo "-----------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if [ ! -f "config/env/production.env" ]; then
    log_error "–§–∞–π–ª config/env/production.env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    log_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: ./setup-production.sh"
    exit 1
fi

log_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞"

echo ""
log_info "–®–∞–≥ 2: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "---------------------------------------"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f config/docker/docker-compose.prod.yml down --remove-orphans 2>/dev/null || true

echo ""
log_info "–®–∞–≥ 3: –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "----------------------------"

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
log_info "–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f config/docker/docker-compose.prod.yml up -d

echo ""
log_info "–®–∞–≥ 4: –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "------------------------------------"

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
log_info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (180 —Å–µ–∫—É–Ω–¥)..."
sleep 180

echo ""
log_info "–®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞"
echo "------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker-compose -f config/docker/docker-compose.prod.yml ps

echo ""
log_info "–®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"
echo "---------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
check_service() {
    local url=$1
    local service=$2
    if curl -s --connect-timeout 10 "$url" > /dev/null; then
        log_success "$service –¥–æ—Å—Ç—É–ø–µ–Ω: $url"
    else
        log_error "$service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $url"
    fi
}

check_service "http://$SERVER_IP" "Frontend (—á–µ—Ä–µ–∑ nginx)"
check_service "http://$SERVER_IP:8000/docs" "Backend API"
check_service "http://$SERVER_IP/api/health" "Backend Health"

echo ""
log_success "üéâ –ü—Ä–æ–¥–∞–∫—à–Ω —Å—Ä–µ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞!"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "‚Ä¢ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://$SERVER_IP"
echo "‚Ä¢ Backend API: http://$SERVER_IP:8000"
echo "‚Ä¢ Swagger UI: http://$SERVER_IP:8000/docs"
echo "‚Ä¢ Health Check: http://$SERVER_IP/api/health"
echo ""
echo "üìã –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:"
echo "‚Ä¢ –õ–æ–≥–∏–Ω: admin"
echo "‚Ä¢ –ü–∞—Ä–æ–ª—å: $(grep ADMIN_PASSWORD config/env/production.env | cut -d'=' -f2)"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "‚Ä¢ –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: docker-compose -f config/docker/docker-compose.prod.yml logs -f"
echo "‚Ä¢ –õ–æ–≥–∏ backend: docker-compose -f config/docker/docker-compose.prod.yml logs -f backend"
echo "‚Ä¢ –õ–æ–≥–∏ frontend: docker-compose -f config/docker/docker-compose.prod.yml logs -f frontend"
echo "‚Ä¢ –õ–æ–≥–∏ nginx: docker-compose -f config/docker/docker-compose.prod.yml logs -f nginx"
echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞: docker-compose -f config/docker/docker-compose.prod.yml restart [service_name]"
echo "‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose -f config/docker/docker-compose.prod.yml down"
