#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
"""
import os
import shutil

def fix_models():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –º–æ–¥–µ–ª–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º"""

    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–û–î–ï–õ–ï–ô –î–õ–Ø –°–ï–†–í–ï–†–ê")
    print("=" * 50)

    # –§–∞–π–ª –º–æ–¥–µ–ª–µ–π
    models_file = "/Users/andreydolgov/Desktop/programming/agb_proj/backend/models.py"

    # 1. –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å–≤—è–∑–∏ –≤ ChatFolder
    print("üìã 1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–≤—è–∑–µ–π –≤ ChatFolder...")

    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –º–æ–¥–µ–ª–µ–π
    with open(models_file, 'r', encoding='utf-8') as f:
        content = f.read()

    # –î–æ–±–∞–≤–ª—è–µ–º user_id –≤ ChatFolder –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if 'user_id' not in content.split('class ChatFolder')[1].split('class')[0]:
        # –ò—â–µ–º –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
        chat_folder_pattern = '''class ChatFolder(Base):
    """–ü–∞–ø–∫–∏ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–æ–≤"""
    __tablename__ = "chat_folders"

    id = Column(Integer, primary_key=True, index=True)
    name = Column(String, nullable=False)
    description = Column(String, nullable=True)
    created_by = Column(Integer, ForeignKey("users.id"), nullable=False)
    is_default = Column(Boolean, default=False)
    created_at = Column(DateTime(timezone=True), server_default=func.now())

    # –°–≤—è–∑–∏
    creator = relationship("User", foreign_keys=[created_by], lazy="selectin")'''

        replacement = '''class ChatFolder(Base):
    """–ü–∞–ø–∫–∏ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–æ–≤"""
    __tablename__ = "chat_folders"

    id = Column(Integer, primary_key=True, index=True)
    name = Column(String, nullable=False)
    description = Column(String, nullable=True)
    user_id = Column(Integer, ForeignKey("users.id"), nullable=True)
    room_id = Column(Integer, ForeignKey("chat_rooms.id"), nullable=True)
    created_by = Column(Integer, ForeignKey("users.id"), nullable=False)
    is_default = Column(Boolean, default=False)
    created_at = Column(DateTime(timezone=True), server_default=func.now())

    # –°–≤—è–∑–∏
    creator = relationship("User", foreign_keys=[created_by], lazy="selectin")
    user = relationship("User", foreign_keys=[user_id], lazy="selectin")
    room = relationship("ChatRoom", foreign_keys=[room_id], lazy="selectin")'''

        content = content.replace(chat_folder_pattern, replacement)
        print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —Å–≤—è–∑–∏ user –∏ room –≤ ChatFolder")

    # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–≤—è–∑–∏ –≤ ChatParticipant
    print("\nüìã 2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤—è–∑–µ–π –≤ ChatParticipant...")

    if 'chat_room' not in content:
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ chat_room –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        chat_participant_pattern = '''    # –°–≤—è–∑–∏
    user = relationship("User", lazy="selectin")
    bot = relationship("ChatBot", lazy="selectin")'''

        replacement = '''    # –°–≤—è–∑–∏
    user = relationship("User", lazy="selectin")
    bot = relationship("ChatBot", lazy="selectin")
    chat_room = relationship("ChatRoom", foreign_keys=[room_id], lazy="selectin")'''

        if chat_participant_pattern in content:
            content = content.replace(chat_participant_pattern, replacement)
            print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å chat_room –≤ ChatParticipant")

    # 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–≤—è–∑–∏ –≤ ChatRoomFolder
    print("\nüìã 3. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤—è–∑–µ–π –≤ ChatRoomFolder...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏–µ—Å—è —Å–≤—è–∑–∏
    if 'ChatRoomFolder.room' in content and 'ChatRoom.folders' in content:
        # –£–±–∏—Ä–∞–µ–º –ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏–µ—Å—è —Å–≤—è–∑–∏
        content = content.replace(
            'room = relationship("ChatRoom", lazy="selectin")',
            'room = relationship("ChatRoom", lazy="selectin", overlaps="folders")'
        )
        print("   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ —Å–≤—è–∑–µ–π ChatRoomFolder.room")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    with open(models_file, 'w', encoding='utf-8') as f:
        f.write(content)

    print("\n‚úÖ –ú–û–î–ï–õ–ò –ò–°–ü–†–ê–í–õ–ï–ù–´!")
    print("\nüìä –í–ù–ï–°–ï–ù–ù–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø:")
    print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω user_id –∏ room_id –≤ ChatFolder")
    print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —Å–≤—è–∑–∏ user –∏ room –≤ ChatFolder")
    print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å chat_room –≤ ChatParticipant")
    print("   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ —Å–≤—è–∑–µ–π –≤ ChatRoomFolder")

def create_migration_script():
    """–°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞"""

    print("\nüìã 4. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–∏...")

    migration_script = """#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

echo "üîÑ –ó–ê–ü–£–°–ö –ú–ò–ì–†–ê–¶–ò–ò –ë–ê–ó–´ –î–ê–ù–ù–´–•"
echo "================================"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º backend
echo "üìã 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backend..."
docker-compose stop backend

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
echo "üìã 2. –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏..."
python migrate_database.py

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º backend
echo "üìã 3. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend..."
docker-compose start backend

echo ""
echo "‚úÖ –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "======================="
echo "–¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"
"""

    with open('/Users/andreydolgov/Desktop/programming/agb_proj/migrate_server.sh', 'w') as f:
        f.write(migration_script)

    # –î–µ–ª–∞–µ–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod('/Users/andreydolgov/Desktop/programming/agb_proj/migrate_server.sh', 0o755)

    print("   ‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç migrate_server.sh")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    fix_models()
    create_migration_script()

    print("\n" + "=" * 50)
    print("üéâ –ü–û–î–ì–û–¢–û–í–ö–ê –ö –ú–ò–ì–†–ê–¶–ò–ò –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("\nüìã –î–ê–õ–¨–ù–ï–ô–®–ò–ï –î–ï–ô–°–¢–í–ò–Ø:")
    print("   1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä:")
    print("      scp models.py migrate_database.py migrate_server.sh root@–í–ê–®_IP:/root/agb_platform/backend/")
    print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:")
    print("      cd /root/agb_platform && ./migrate_server.sh")
    print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")

if __name__ == "__main__":
    main()
