#!/usr/bin/env python3
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend
sys.path.append('/Users/andreydolgov/Desktop/programming/agb_proj/backend')

from database import get_db
from api.v1.endpoints.article_matching import process_ai_request
from models import User
from sqlalchemy import select

async def test_http_debug_detailed():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ HTTP API"""
    print("üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ HTTP API...")
    
    async for db in get_db():
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            result = await db.execute(select(User).where(User.username == 'admin'))
            user = result.scalar_one_or_none()
            
            if not user:
                print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
            
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.username}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é process_ai_request
            message = "–û–•–ö–£-000184 –£–ë–† - –ö—É–Ω–¥—É–º–∏ –°–º–∞–∑–∫–∞ –∞–Ω—Ç–∏–≤–∏–±—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è GRIZZLY (–≤–µ–¥—Ä–æ 17 –∫–≥.) 10 —à—Ç"
            files = []
            
            print(f"üîç –í—ã–∑—ã–≤–∞–µ–º process_ai_request —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º: {message}")
            response = await process_ai_request(message, files, db, user)
            print(f"‚úÖ –û—Ç–≤–µ—Ç process_ai_request: {response}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            import traceback
            traceback.print_exc()
        finally:
            await db.close()
        break

if __name__ == "__main__":
    asyncio.run(test_http_debug_detailed())
