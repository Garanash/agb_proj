#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ API —á–∞—Ç–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL = "http://localhost:8000"
API_URL = f"{BASE_URL}/api"

def get_auth_token():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    print("üîê –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
    
    # –õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    login_data = {
        "username": "agbttest1",
        "password": "test123"  # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
    }
    
    try:
        response = requests.post(f"{API_URL}/auth/login", json=login_data)
        if response.status_code == 200:
            token_data = response.json()
            token = token_data.get('access_token')
            print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:20]}...")
            return token
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞: {e}")
        return None

def test_chat_room(token, room_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —á–∞—Ç"""
    print(f"\nüí¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Ç–∞ {room_id}...")
    
    headers = {
        'Authorization': f'Bearer {token}'
    }
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ —á–∞—Ç–∞
        response = requests.get(f"{API_URL}/chat/rooms/{room_id}", headers=headers)
        if response.status_code == 200:
            room_data = response.json()
            print(f"‚úÖ –î–µ—Ç–∞–ª–∏ —á–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            participants = room_data.get('participants', [])
            print(f"üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(participants)}")
            
            for i, participant in enumerate(participants):
                print(f"\n  {i+1}. ID —É—á–∞—Å—Ç–Ω–∏–∫–∞: {participant.get('id')}")
                print(f"     Chat Room ID: {participant.get('chat_room_id')}")
                print(f"     User ID: {participant.get('user_id')}")
                print(f"     Bot ID: {participant.get('bot_id')}")
                print(f"     Is Admin: {participant.get('is_admin')}")
                print(f"     Joined At: {participant.get('joined_at')}")
                print(f"     Last Read At: {participant.get('last_read_at')}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if participant.get('user'):
                    user = participant['user']
                    print(f"     üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")
                    print(f"        - ID: {user.get('id')}")
                    print(f"        - –ò–º—è: {user.get('first_name')} {user.get('last_name')}")
                    print(f"        - Username: {user.get('username')}")
                    print(f"        - Avatar: {user.get('avatar_url')}")
                    print(f"        - Department: {user.get('department_id')}")
                else:
                    print(f"     ‚ùå –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Ç–∞
                if participant.get('bot'):
                    bot = participant['bot']
                    print(f"     ü§ñ –ë–æ—Ç:")
                    print(f"        - ID: {bot.get('id')}")
                    print(f"        - –ò–º—è: {bot.get('name')}")
                else:
                    print(f"     ‚ùå –î–∞–Ω–Ω—ã–µ –±–æ—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            messages = room_data.get('messages', [])
            print(f"\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}")
            
            if messages:
                for i, message in enumerate(messages[:3]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    print(f"\n  {i+1}. –°–æ–æ–±—â–µ–Ω–∏–µ:")
                    print(f"     ID: {message.get('id')}")
                    print(f"     –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {message.get('content', 'No content')[:50]}...")
                    print(f"     Sender ID: {message.get('sender_id')}")
                    print(f"     Bot ID: {message.get('bot_id')}")
                    
                    if message.get('sender'):
                        sender = message['sender']
                        print(f"     üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:")
                        print(f"        - ID: {sender.get('id')}")
                        print(f"        - –ò–º—è: {sender.get('first_name')} {sender.get('last_name')}")
                    else:
                        print(f"     ‚ùå –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
                    
                    if message.get('bot'):
                        bot = message['bot']
                        print(f"     ü§ñ –û—Ç –±–æ—Ç–∞:")
                        print(f"        - ID: {bot.get('id')}")
                        print(f"        - –ò–º—è: {bot.get('name')}")
                    else:
                        print(f"     ‚ùå –î–∞–Ω–Ω—ã–µ –±–æ—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
            
            return room_data
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —á–∞—Ç–∞: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —á–∞—Ç–∞: {e}")
        return None

def test_users_api(token):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print(f"\nüë• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    headers = {
        'Authorization': f'Bearer {token}'
    }
    
    try:
        response = requests.get(f"{API_URL}/users/chat-users/", headers=headers)
        if response.status_code == 200:
            users = response.json()
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —á–∞—Ç–∞: {len(users)}")
            
            for i, user in enumerate(users[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"  {i+1}. {user.get('first_name', 'Unknown')} {user.get('last_name', 'Unknown')}")
                print(f"     üìß Username: {user.get('username', 'Unknown')}")
                print(f"     üñºÔ∏è Avatar: {user.get('avatar_url', 'None')}")
                print(f"     üè¢ Department: {user.get('department_id', 'None')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")

def main():
    print("üöÄ –û—Ç–ª–∞–¥–∫–∞ API —á–∞—Ç–∞...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    token = get_auth_token()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    test_users_api(token)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —á–∞—Ç (ID 22 –∏–∑ –ª–æ–≥–æ–≤)
    test_chat_room(token, 22)
    
    print("\n‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    main()
