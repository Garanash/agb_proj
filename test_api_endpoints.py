#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API endpoints –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
"""
import asyncio
import httpx
import json

async def test_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö API endpoints"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API ENDPOINTS")
    print("=" * 50)

    base_url = "http://localhost"

    async with httpx.AsyncClient(timeout=10.0) as client:
        try:
            # 1. –¢–µ—Å—Ç –∑–¥–æ—Ä–æ–≤—å—è API
            print("üìä 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API...")
            response = await client.get(f"{base_url}/api/health")
            if response.status_code == 200:
                print("‚úÖ API –∑–¥–æ—Ä–æ–≤—å–µ: OK")
            else:
                print(f"‚ùå API –∑–¥–æ—Ä–æ–≤—å–µ: {response.status_code}")

            # 2. –¢–µ—Å—Ç –∫–æ—Ä–Ω–µ–≤–æ–≥–æ API endpoint
            print("\nüìã 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ API endpoint...")
            response = await client.get(f"{base_url}/api/")
            if response.status_code == 200:
                data = response.json()
                print("‚úÖ –ö–æ—Ä–Ω–µ–≤–æ–π API: OK")
                print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints: {len(data.get('endpoints', {}))}")
                for name, path in data.get('endpoints', {}).items():
                    print(f"   - {name}: {path}")
            else:
                print(f"‚ùå –ö–æ—Ä–Ω–µ–≤–æ–π API: {response.status_code}")

            # 3. –¢–µ—Å—Ç –æ—Ç–ª–∞–¥–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤
            print("\nüîç 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤...")
            response = await client.get(f"{base_url}/api/debug/routes")
            if response.status_code == 200:
                data = response.json()
                print("‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã: OK")
                print(f"   –í—Å–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–æ–≤: {data.get('total', 0)}")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
                routes = [route['path'] for route in data.get('routes', [])]
                key_routes = [
                    '/api/auth/login',
                    '/api/users/chat-users',
                    '/api/departments/list',
                    '/api/company-employees/',
                    '/api/events/',
                    '/api/chat/rooms/',
                    '/api/chat/bots/'
                ]

                print("   üîë –ö–ª—é—á–µ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã:")
                for route in key_routes:
                    if any(r.startswith(route) for r in routes):
                        print(f"   ‚úÖ {route}")
                    else:
                        print(f"   ‚ùå {route} - –ù–ï –ù–ê–ô–î–ï–ù")
            else:
                print(f"‚ùå –ú–∞—Ä—à—Ä—É—Ç—ã: {response.status_code}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")

    print("\n" + "=" * 50)
    print("üèÅ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")

if __name__ == "__main__":
    asyncio.run(test_api_endpoints())
