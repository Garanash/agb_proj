#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ –æ—á–µ–Ω—å –º–∞–ª–æ

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[WARN] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ root
check_root() {
    if [[ $EUID -eq 0 ]]; then
        log "‚úÖ –ó–∞–ø—É—Å–∫ –æ—Ç root –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω"
    else
        error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ—Ç –∏–º–µ–Ω–∏ root. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ./deploy.sh –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
check_files() {
    local required_files=(
        "docker-compose.minimal.yml"
        "production.env"
        "frontend/Dockerfile.prod.minimal"
        "backend/Dockerfile.prod"
    )
    
    for file in "${required_files[@]}"; do
        if [[ ! -f "$file" ]]; then
            error "–ù–µ –Ω–∞–π–¥–µ–Ω –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ñ–∞–π–ª: $file"
            exit 1
        fi
    done
    
    log "‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"
}

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
stop_containers() {
    info "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    docker-compose -f docker-compose.minimal.yml down 2>/dev/null || true
    docker-compose -f docker-compose.prod.yml down 2>/dev/null || true
}

# –û—á–∏—â–∞–µ–º Docker –∫—ç—à
cleanup_docker() {
    info "–û—á–∏—â–∞–µ–º Docker –∫—ç—à..."
    docker system prune -a -f --volumes
}

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
create_directories() {
    info "–°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
    mkdir -p uploads ssl backups
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –æ—Ç root
    if [[ $EUID -eq 0 ]]; then
        chown -R 1000:1000 uploads ssl backups
    fi
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
start_containers() {
    info "–ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    docker-compose -f docker-compose.minimal.yml up -d --build
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è Docker volumes –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –æ—Ç root
    if [[ $EUID -eq 0 ]]; then
        info "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è Docker volumes..."
        docker-compose -f docker-compose.minimal.yml exec -T backend chown -R 1000:1000 /app/uploads 2>/dev/null || true
        docker-compose -f docker-compose.minimal.yml exec -T postgres chown -R 999:999 /var/lib/postgresql/data 2>/dev/null || true
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
check_services() {
    info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 30
    
    local services=("postgres" "backend" "frontend")
    for service in "${services[@]}"; do
        if docker-compose -f docker-compose.minimal.yml ps | grep -q "$service.*Up"; then
            log "‚úÖ –°–µ—Ä–≤–∏—Å $service –∑–∞–ø—É—â–µ–Ω"
        else
            error "‚ùå –°–µ—Ä–≤–∏—Å $service –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
    done
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏
show_info() {
    log "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo ""
    info "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
    info "  - –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://localhost:3000"
    info "  - –ë–µ–∫–µ–Ω–¥: http://localhost:8000"
    info "  - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: localhost:5432"
    echo ""
    info "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    info "  - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose -f docker-compose.minimal.yml logs -f"
    info "  - –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose -f docker-compose.minimal.yml down"
    info "  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose -f docker-compose.minimal.yml restart"
    echo ""
    warn "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –≠—Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ Nginx!"
    warn "–î–ª—è production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å Nginx."
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –ó–∞–ø—É—Å–∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏..."
    
    check_root
    check_files
    stop_containers
    cleanup_docker
    create_directories
    start_containers
    check_services
    show_info
    
    log "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main "$@"
