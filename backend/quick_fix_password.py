#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∞
"""
import asyncio
import os
from passlib.context import CryptContext
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select, update
from database import engine
from models import User

pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

def get_password_hash(password):
    """–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è"""
    return pwd_context.hash(password)

async def quick_fix_password():
    """–ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∞"""
    async_session = AsyncSession(engine)

    try:
        print("üîß –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–ê–†–û–õ–Ø –ê–î–ú–ò–ù–ê")
        print("=" * 45)

        # –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω–∞
        result = await async_session.execute(select(User).where(User.username == "admin"))
        admin = result.scalar_one_or_none()

        if not admin:
            print("‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∞–¥–º–∏–Ω: {admin.username}")

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ö–µ—à –¥–ª—è admin123
        correct_password = "admin123"
        correct_hash = get_password_hash(correct_password)

        print(f"üîë –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: {correct_password}")
        print(f"üîê –ù–æ–≤—ã–π —Ö–µ—à: {correct_hash}")

        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å
        await async_session.execute(
            update(User)
            .where(User.username == "admin")
            .values(hashed_password=correct_hash)
        )

        await async_session.commit()

        print("‚úÖ –ü–ê–†–û–õ–¨ –ê–î–ú–ò–ù–ê –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù!")
        print()
        print("üîë –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê:")
        print(f"   –õ–æ–≥–∏–Ω: admin")
        print(f"   –ü–∞—Ä–æ–ª—å: {correct_password}")
        print()
        print("üéâ –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        await async_session.rollback()
    finally:
        await async_session.close()

if __name__ == "__main__":
    asyncio.run(quick_fix_password())
