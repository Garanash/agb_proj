import asyncio
import os
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select
from database import engine
from models import User, UserRole, Department
from passlib.context import CryptContext

pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

async def create_admin_user():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    async_session = AsyncSession(engine)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        admin_username = os.getenv("ADMIN_USERNAME", "admin")
        admin_password = os.getenv("ADMIN_PASSWORD", "admin123")
        admin_email = os.getenv("ADMIN_EMAIL", "admin@almazgeobur.ru")
        admin_first_name = os.getenv("ADMIN_FIRST_NAME", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        admin_last_name = os.getenv("ADMIN_LAST_NAME", "–°–∏—Å—Ç–µ–º—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω
        result = await async_session.execute(select(User).where(User.username == admin_username))
        existing_admin = result.scalar_one_or_none()
        if existing_admin:
            print(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {admin_username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return
        
        # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        admin_user = User(
            username=admin_username,
            email=admin_email,
            first_name=admin_first_name,
            last_name=admin_last_name,
            middle_name="",
            hashed_password=pwd_context.hash(admin_password),
            role=UserRole.ADMIN,
            is_active=True
        )
        
        async_session.add(admin_user)
        await async_session.commit()
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏
        admin_department = Department(
            name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è",
            description="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–¥–µ–ª –∫–æ–º–ø–∞–Ω–∏–∏"
        )
        
        async_session.add(admin_department)
        await async_session.commit()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –æ—Ç–¥–µ–ª–∞ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å ID
        await async_session.refresh(admin_department)
        
        # –ù–∞–∑–Ω–∞—á–∞–µ–º –∞–¥–º–∏–Ω–∞ –≤ –æ—Ç–¥–µ–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏
        admin_user.department_id = admin_department.id
        await async_session.commit()
        
        # –ù–∞–∑–Ω–∞—á–∞–µ–º –∞–¥–º–∏–Ω–∞ –≥–ª–∞–≤–æ–π –æ—Ç–¥–µ–ª–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏
        admin_department.head_id = admin_user.id
        await async_session.commit()
        
        print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        print(f"\nüîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
        print(f"–õ–æ–≥–∏–Ω: {admin_username}")
        print(f"–ü–∞—Ä–æ–ª—å: {admin_password}")
        print(f"Email: {admin_email}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
        import traceback
        traceback.print_exc()
        await async_session.rollback()
    finally:
        await async_session.close()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    await create_admin_user()

    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã –í–≠–î
    try:
        print("\nüîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã –í–≠–î...")
        from init_ved_nomenclature import init_ved_nomenclature
        await init_ved_nomenclature()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã –í–≠–î: {e}")

if __name__ == "__main__":
    asyncio.run(main())
