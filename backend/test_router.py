#!/usr/bin/env python3
"""–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞ –æ—Ç–¥–µ–ª—å–Ω–æ"""

from fastapi import FastAPI, APIRouter
from fastapi.testclient import TestClient

print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏...")

# –¢–µ—Å—Ç 1: –†–æ—É—Ç–µ—Ä users
try:
    print("\n1. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä users...")
    from routers.users import router as users_router
    
    test_app = FastAPI()
    test_app.include_router(users_router, prefix="/api/users")
    
    client = TestClient(test_app)
    response = client.get("/api/users/")
    print(f"   ‚úÖ users —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
    
except Exception as e:
    print(f"   ‚ùå users –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")

# –¢–µ—Å—Ç 2: –†–æ—É—Ç–µ—Ä news
try:
    print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä news...")
    from routers.news import router as news_router
    
    test_app = FastAPI()
    test_app.include_router(news_router, prefix="/api/news")
    
    client = TestClient(test_app)
    response = client.get("/api/news/")
    print(f"   ‚úÖ news —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
    
except Exception as e:
    print(f"   ‚ùå news –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")

# –¢–µ—Å—Ç 3: –†–æ—É—Ç–µ—Ä departments
try:
    print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä departments...")
    from routers.departments import router as departments_router
    
    test_app = FastAPI()
    test_app.include_router(departments_router, prefix="/api/departments")
    
    client = TestClient(test_app)
    response = client.get("/api/departments/")
    print(f"   ‚úÖ departments —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
    
except Exception as e:
    print(f"   ‚ùå departments –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")

print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
