#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ passport_counters
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Docker
os.environ["DATABASE_URL"] = "postgresql+asyncpg://felix_user:felix_password@localhost:15433/agb_felix"

from database import engine
from sqlalchemy import text

async def apply_migration():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã passport_counters"""
    
    async with engine.begin() as conn:
        print("üîß –ü—Ä–∏–º–µ–Ω—è—é –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã passport_counters...")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        await conn.execute(text("""
            CREATE TABLE IF NOT EXISTS passport_counters (
                id SERIAL PRIMARY KEY,
                year INTEGER NOT NULL UNIQUE,
                current_serial INTEGER NOT NULL DEFAULT 0,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
        """))
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞
        await conn.execute(text("""
            CREATE INDEX IF NOT EXISTS idx_passport_counters_year ON passport_counters(year);
        """))
        
        # –í—Å—Ç–∞–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞
        await conn.execute(text("""
            INSERT INTO passport_counters (year, current_serial) 
            VALUES (EXTRACT(YEAR FROM CURRENT_DATE), 0)
            ON CONFLICT (year) DO NOTHING;
        """))
        
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è passport_counters —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
        result = await conn.execute(text("SELECT * FROM passport_counters;"))
        counters = result.fetchall()
        
        print(f"üìä –¢–µ–∫—É—â–∏–µ —Å—á–µ—Ç—á–∏–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        for counter in counters:
            print(f"   –ì–æ–¥: {counter.year}, –°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä: {counter.current_serial}")

if __name__ == "__main__":
    asyncio.run(apply_migration())
