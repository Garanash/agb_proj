#!/usr/bin/env python3
"""–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è main.py –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""

from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from contextlib import asynccontextmanager
from database import engine, Base

@asynccontextmanager
async def lifespan(app: FastAPI):
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)
    yield

app = FastAPI(
    title="Felix - Test",
    description="–¢–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è",
    version="1.0.0",
    lifespan=lifespan,
    redirect_slashes=False
)

# CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ä–æ—É—Ç–µ—Ä–æ–≤...")

try:
    print("1. –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–æ–≤...")
    from routers import users, auth, news, events, departments, company_employees
    print("   ‚úÖ –†–æ—É—Ç–µ—Ä—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    
    print("2. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤...")
    app.include_router(users.router, prefix="/api/users", tags=["users"])
    print("   ‚úÖ users –ø–æ–¥–∫–ª—é—á–µ–Ω")
    
    app.include_router(auth.router, prefix="/api/auth", tags=["authentication"])
    print("   ‚úÖ auth –ø–æ–¥–∫–ª—é—á–µ–Ω")
    
    app.include_router(news.router, prefix="/api/news", tags=["news"])
    print("   ‚úÖ news –ø–æ–¥–∫–ª—é—á–µ–Ω")
    
    app.include_router(events.router, prefix="/api/events", tags=["events"])
    print("   ‚úÖ events –ø–æ–¥–∫–ª—é—á–µ–Ω")
    
    app.include_router(departments.router, prefix="/api/departments", tags=["departments"])
    print("   ‚úÖ departments –ø–æ–¥–∫–ª—é—á–µ–Ω")
    
    app.include_router(company_employees.router, prefix="/api/company-employees", tags=["company_employees"])
    print("   ‚úÖ company_employees –ø–æ–¥–∫–ª—é—á–µ–Ω")
    
    print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤...")
    routes = [route.path for route in app.routes]
    print(f"   üìç –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã: {routes}")
    
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

@app.get("/api/health")
async def health_check():
    return {"status": "healthy", "service": "Felix Test"}

@app.get("/")
async def root():
    return {"message": "Felix Test API"}

print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
