#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∞—Ä–æ–ª–µ–º
"""
import asyncio
import os
from passlib.context import CryptContext
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select
from database import engine
from models import User

pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

def verify_password(plain_password, hashed_password):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è"""
    return pwd_context.verify(plain_password, hashed_password)

def get_password_hash(password):
    """–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è"""
    return pwd_context.hash(password)

async def debug_password():
    """–û—Ç–ª–∞–¥–∫–∞ –ø–∞—Ä–æ–ª—è"""
    async_session = AsyncSession(engine)

    try:
        print("üîç –û–¢–õ–ê–î–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –ü–ê–†–û–õ–ï–ú")
        print("=" * 50)

        # –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω–∞ –∏–∑ –±–∞–∑—ã
        result = await async_session.execute(select(User).where(User.username == "admin"))
        admin = result.scalar_one_or_none()

        if not admin:
            print("‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        print(f"‚úÖ –ê–¥–º–∏–Ω –Ω–∞–π–¥–µ–Ω: {admin.username}")
        print(f"üìß Email: {admin.email}")
        print(f"üîì –ê–∫—Ç–∏–≤–µ–Ω: {admin.is_active}")
        print(f"üë§ –†–æ–ª—å: {admin.role}")
        print(f"üîë –•–µ—à –ø–∞—Ä–æ–ª—è –∏–∑ –±–∞–∑—ã: {admin.hashed_password}")
        print()

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
        test_passwords = ["admin", "admin123", "password", "123456", "felix_password"]

        print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ê–†–û–õ–ï–ô:")
        print("-" * 30)

        for password in test_passwords:
            is_valid = verify_password(password, admin.hashed_password)
            status = "‚úÖ –í–ï–†–ù–´–ô" if is_valid else "‚ùå –ù–ï–í–ï–†–ù–´–ô"
            print(f"{password}: {status}")

        print()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ö–µ—à –¥–ª—è admin123
        print("üîß –ì–ï–ù–ï–†–ê–¶–ò–Ø –ü–†–ê–í–ò–õ–¨–ù–û–ì–û –•–ï–®–ê:")
        correct_hash = get_password_hash("admin123")
        print(f"–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ö–µ—à –¥–ª—è 'admin123': {correct_hash}")
        print()

        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ö–µ—à–∏
        print("‚öñÔ∏è –°–†–ê–í–ù–ï–ù–ò–ï –•–ï–®–ï–ô:")
        if admin.hashed_password == correct_hash:
            print("‚úÖ –•–µ—à –≤ –±–∞–∑–µ –°–û–í–ü–ê–î–ê–ï–¢ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º!")
        else:
            print("‚ùå –•–µ—à –≤ –±–∞–∑–µ –ù–ï –°–û–í–ü–ê–î–ê–ï–¢ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º!")
            print(f"–¢–µ–∫—É—â–∏–π —Ö–µ—à:  {admin.hashed_password}")
            print(f"–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π:   {correct_hash}")
            print()

            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Å–ø—Ä–∞–≤–∏—Ç—å
            print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï:")
            print("–•–æ—Ç–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å? –ó–∞–ø—É—Å—Ç–∏—Ç–µ:")
            print("python reset_admin.py")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    finally:
        await async_session.close()

if __name__ == "__main__":
    asyncio.run(debug_password())
