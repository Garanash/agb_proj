import asyncio
import os
from passlib.context import CryptContext
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select, delete, insert
from database import engine
from models import User, UserRole

pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

def get_password_hash(password):
    """–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è"""
    return pwd_context.hash(password)

async def reset_admin():
    """–°–±—Ä–æ—Å –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞"""
    async_session = AsyncSession(engine)

    try:
        print("üîÑ –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–¥–º–∏–Ω–∞...")

        # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∞
        result = await async_session.execute(delete(User).where(User.username == "admin"))
        deleted_count = result.rowcount
        print(f"–£–¥–∞–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {deleted_count}")

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
        admin_password = "admin123"
        admin_hash = get_password_hash(admin_password)

        new_admin = User(
            username="admin",
            email="admin@almazgeobur.ru",
            first_name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
            last_name="–°–∏—Å—Ç–µ–º—ã",
            middle_name="",
            hashed_password=admin_hash,
            role=UserRole.ADMIN,
            is_active=True
        )

        async_session.add(new_admin)
        await async_session.commit()
        await async_session.refresh(new_admin)

        print("‚úÖ –ê–¥–º–∏–Ω —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω!")
        print(f"ID: {new_admin.id}")
        print(f"–õ–æ–≥–∏–Ω: {new_admin.username}")
        print(f"–ü–∞—Ä–æ–ª—å: {admin_password}")
        print(f"–•–µ—à: {new_admin.hashed_password}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        result = await async_session.execute(select(User).where(User.username == "admin"))
        admin_check = result.scalar_one_or_none()

        if admin_check:
            print("‚úÖ –ê–¥–º–∏–Ω –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            print(f"–ê–∫—Ç–∏–≤–µ–Ω: {admin_check.is_active}")
            print(f"–†–æ–ª—å: {admin_check.role}")
        else:
            print("‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        await async_session.rollback()
    finally:
        await async_session.close()

if __name__ == "__main__":
    asyncio.run(reset_admin())
