#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü —á–∞—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from database import engine, Base
from models import AIChatSession, AIChatMessage

async def create_chat_tables():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —á–∞—Ç–∞"""
    
    print("üîß –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —á–∞—Ç–∞...")
    
    try:
        async with engine.begin() as conn:
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
            await conn.run_sync(Base.metadata.create_all)
            print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —á–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã
            from sqlalchemy import text
            result = await conn.execute(text("""
                SELECT table_name 
                FROM information_schema.tables 
                WHERE table_schema = 'public' 
                AND table_name IN ('ai_chat_sessions', 'ai_chat_messages')
                ORDER BY table_name
            """))
            
            tables = result.fetchall()
            print(f"üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: {[table[0] for table in tables]}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(create_chat_tables())
