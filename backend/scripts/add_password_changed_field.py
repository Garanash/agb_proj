#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è is_password_changed –≤ —Ç–∞–±–ª–∏—Ü—É users
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database import get_db, engine
from sqlalchemy import text
from models import Base

async def add_password_changed_field():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ is_password_changed –≤ —Ç–∞–±–ª–∏—Ü—É users"""
    
    # SQL –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è
    add_column_sql = """
    ALTER TABLE users 
    ADD COLUMN IF NOT EXISTS is_password_changed BOOLEAN DEFAULT FALSE;
    """
    
    # SQL –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    update_existing_users_sql = """
    UPDATE users 
    SET is_password_changed = TRUE 
    WHERE is_password_changed IS NULL;
    """
    
    try:
        async with engine.begin() as conn:
            print("–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ is_password_changed –≤ —Ç–∞–±–ª–∏—Ü—É users...")
            await conn.execute(text(add_column_sql))
            print("‚úÖ –ü–æ–ª–µ is_password_changed –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            
            print("–û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
            result = await conn.execute(text(update_existing_users_sql))
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {result.rowcount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            
            print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(add_password_changed_field())
