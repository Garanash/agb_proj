#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –≤ production
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ

set -e

echo "üöÄ AGB Project - Production –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
echo "========================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker –∏ Docker Compose
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ production.env —Ñ–∞–π–ª–∞
if [ ! -f "production.env" ]; then
    echo "‚ùå –§–∞–π–ª production.env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ production.env.example –≤ production.env –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:"
    echo "   cp production.env.example production.env"
    echo "   nano production.env"
    exit 1
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.prod.yml down -v 2>/dev/null || true

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö production –æ–±—Ä–∞–∑–æ–≤..."
docker-compose -f docker-compose.prod.yml down --rmi all 2>/dev/null || true

# –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.prod.yml up --build -d

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ production —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 60

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üìä –°—Ç–∞—Ç—É—Å production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose -f docker-compose.prod.yml ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º healthcheck
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è production —Å–µ—Ä–≤–∏—Å–æ–≤..."
for i in {1..15}; do
    if curl -f http://localhost:8000/api/health > /dev/null 2>&1; then
        echo "‚úÖ Production Backend –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
        break
    else
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ production backend... ($i/15)"
        sleep 15
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º frontend
for i in {1..15}; do
    if curl -f http://localhost:3000 > /dev/null 2>&1; then
        echo "‚úÖ Production Frontend –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
        break
    else
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ production frontend... ($i/15)"
        sleep 15
    fi
done

echo ""
echo "üéâ PRODUCTION –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo "====================================="
echo ""
echo "üìã –î–æ—Å—Ç—É–ø –∫ production —Å–∏—Å—Ç–µ–º–µ:"
echo "   üåê Frontend: http://localhost:3000"
echo "   üîß Backend API: http://localhost:8000"
echo "   üìä API Docs: http://localhost:8000/docs"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è production:"
echo "   docker-compose -f docker-compose.prod.yml logs -f     # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "   docker-compose -f docker-compose.prod.yml restart     # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "   docker-compose -f docker-compose.prod.yml down        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "   docker-compose -f docker-compose.prod.yml exec backend bash # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ backend"
echo ""
echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
echo "   docker-compose -f docker-compose.prod.yml logs --tail=100 backend"
echo "   docker-compose -f docker-compose.prod.yml logs --tail=100 frontend"
echo "   docker-compose -f docker-compose.prod.yml logs --tail=100 postgres"
echo ""
echo "üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ):"
echo "   docker-compose -f docker-compose.prod.yml --profile monitoring up -d"
