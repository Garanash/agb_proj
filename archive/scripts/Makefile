# AGB Project Makefile
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–º —á–µ—Ä–µ–∑ Make

.PHONY: help build up down restart logs status clean test deploy

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
COMPOSE_FILE ?= docker-compose.yml
ENVIRONMENT ?= prod

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN = \033[0;32m
YELLOW = \033[1;33m
RED = \033[0;31m
NC = \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(GREEN)AGB Project Management$(NC)"
	@echo "========================"
	@echo ""
	@echo "$(YELLOW)–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "  $(GREEN)%-15s$(NC) %s\n", $$1, $$2}' $(MAKEFILE_LIST)
	@echo ""
	@echo "$(YELLOW)–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:$(NC)"
	@echo "  make build          # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤"
	@echo "  make up             # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo "  make down           # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo "  make logs           # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
	@echo "  make test           # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
	@echo "  make deploy         # –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π"

build: ## –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤
	@echo "$(YELLOW)üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	docker-compose -f $(COMPOSE_FILE) build --no-cache
	@echo "$(GREEN)‚úÖ –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã$(NC)"

up: ## –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(YELLOW)üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	docker-compose -f $(COMPOSE_FILE) up -d
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã$(NC)"

down: ## –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	docker-compose -f $(COMPOSE_FILE) down
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(YELLOW)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	docker-compose -f $(COMPOSE_FILE) restart
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã$(NC)"

logs: ## –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
	@echo "$(YELLOW)üìù –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤...$(NC)"
	docker-compose -f $(COMPOSE_FILE) logs -f

status: ## –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(YELLOW)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	docker-compose -f $(COMPOSE_FILE) ps

clean: ## –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...$(NC)"
	docker system prune -f
	docker volume prune -f
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

test: ## –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
	@echo "$(YELLOW)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	python tests/test_deployment.py

deploy: build up ## –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (—Å–±–æ—Ä–∫–∞ + –∑–∞–ø—É—Å–∫)
	@echo "$(GREEN)üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!$(NC)"
	@echo "$(YELLOW)üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev-up: ## –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(YELLOW)üîß –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	docker-compose -f docker-compose.dev.yml up -d
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–∏—Å—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—â–µ–Ω—ã$(NC)"

dev-down: ## –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	docker-compose -f docker-compose.dev.yml down
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–∏—Å—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db-backup: ## –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(YELLOW)üíæ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ë–î...$(NC)"
	docker-compose exec postgres pg_dump -U felix_prod_user agb_felix_prod > backup_$(shell date +%Y%m%d_%H%M%S).sql
	@echo "$(GREEN)‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞$(NC)"

db-restore: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make db-restore FILE=backup.sql)
	@echo "$(YELLOW)üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î –∏–∑ —Ñ–∞–π–ª–∞ $(FILE)...$(NC)"
	docker-compose exec -T postgres psql -U felix_prod_user agb_felix_prod < $(FILE)
	@echo "$(GREEN)‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor: ## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤
	@echo "$(YELLOW)üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤:$(NC)"
	docker stats --no-stream

health: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(YELLOW)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@curl -s http://localhost/health && echo " - Nginx: OK" || echo " - Nginx: FAILED"
	@curl -s http://localhost/api/health && echo " - Backend: OK" || echo " - Backend: FAILED"
	@curl -s http://localhost/ && echo " - Frontend: OK" || echo " - Frontend: FAILED"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
update: ## –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "$(YELLOW)üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	git pull
	make down
	make build
	make up
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è SSL
ssl-setup: ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
	@echo "$(YELLOW)üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL...$(NC)"
	@echo "–ü–æ–º–µ—Å—Ç–∏—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ infrastructure/ssl/:"
	@echo "  - cert.pem (—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç)"
	@echo "  - key.pem (–ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á)"
	@echo "–ó–∞—Ç–µ–º —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ nginx.prod.conf"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è n8n
n8n-up: ## –ó–∞–ø—É—Å–∫ n8n
	@echo "$(YELLOW)ü§ñ –ó–∞–ø—É—Å–∫ n8n...$(NC)"
	docker-compose -f $(COMPOSE_FILE) --profile automation up -d n8n
	@echo "$(GREEN)‚úÖ n8n –∑–∞–ø—É—â–µ–Ω$(NC)"

n8n-down: ## –û—Å—Ç–∞–Ω–æ–≤–∫–∞ n8n
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ n8n...$(NC)"
	docker-compose -f $(COMPOSE_FILE) --profile automation down n8n
	@echo "$(GREEN)‚úÖ n8n –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ª–æ–≥–æ–≤
logs-backend: ## –õ–æ–≥–∏ –±–µ–∫–µ–Ω–¥–∞
	docker-compose -f $(COMPOSE_FILE) logs -f backend

logs-frontend: ## –õ–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	docker-compose -f $(COMPOSE_FILE) logs -f frontend

logs-nginx: ## –õ–æ–≥–∏ nginx
	docker-compose -f $(COMPOSE_FILE) logs -f nginx

logs-db: ## –õ–æ–≥–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	docker-compose -f $(COMPOSE_FILE) logs -f postgres