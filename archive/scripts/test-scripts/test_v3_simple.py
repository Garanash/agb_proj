#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API v3 –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
"""

import asyncio
import aiohttp
import json

async def test_v3_simple():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API v3"""
    
    try:
        async with aiohttp.ClientSession() as session:
            print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API v3...")
            
            # –¢–µ—Å—Ç health check
            async with session.get("http://localhost:8000/api/v3/health") as response:
                print(f"‚úÖ Health check: {response.status}")
                data = await response.json()
                print(f"   –û—Ç–≤–µ—Ç: {data}")
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã...")
            async with session.get("http://localhost:8000/docs") as response:
                print(f"   Docs: {response.status}")
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º OpenAPI —Å—Ö–µ–º—É
            async with session.get("http://localhost:8000/openapi.json") as response:
                if response.status == 200:
                    data = await response.json()
                    paths = data.get('paths', {})
                    v3_paths = [path for path in paths.keys() if path.startswith('/api/v3/')]
                    print(f"   –ù–∞–π–¥–µ–Ω–æ {len(v3_paths)} —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ v3:")
                    for path in v3_paths[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                        print(f"     - {path}")
                else:
                    print(f"   ‚ùå OpenAPI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_v3_simple())
