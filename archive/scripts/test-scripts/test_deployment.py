#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è AGB –ø—Ä–æ–µ–∫—Ç–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è
"""

import requests
import time
import sys
import json
from urllib.parse import urljoin

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL = "http://localhost"
SERVICES = {
    "nginx": f"{BASE_URL}/health",
    "frontend": f"{BASE_URL}/",
    "backend": f"{BASE_URL}/api/health",
}

def test_service(name, url, timeout=30):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞"""
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º {name}: {url}")
    
    start_time = time.time()
    while time.time() - start_time < timeout:
        try:
            response = requests.get(url, timeout=5)
            if response.status_code == 200:
                print(f"‚úÖ {name}: OK ({response.status_code})")
                return True
        except requests.exceptions.RequestException as e:
            print(f"‚è≥ {name}: –û–∂–∏–¥–∞–Ω–∏–µ... ({e})")
            time.sleep(2)
    
    print(f"‚ùå {name}: FAILED (timeout {timeout}s)")
    return False

def test_backend_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –±–µ–∫–µ–Ω–¥–∞"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –±–µ–∫–µ–Ω–¥–∞...")
    
    endpoints = [
        "/api/health",
        "/api/v1/auth/login",
        "/api/v1/article-matching/test-requests/",
    ]
    
    for endpoint in endpoints:
        url = urljoin(BASE_URL, endpoint)
        try:
            response = requests.get(url, timeout=10)
            print(f"  {endpoint}: {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"  {endpoint}: ERROR - {e}")

def test_frontend_pages():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...")
    
    pages = [
        "/",
        "/login",
        "/dashboard",
        "/article-matching",
    ]
    
    for page in pages:
        url = urljoin(BASE_URL, page)
        try:
            response = requests.get(url, timeout=10)
            print(f"  {page}: {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"  {page}: ERROR - {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è AGB –ø—Ä–æ–µ–∫—Ç–∞")
    print("=" * 50)
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —Å–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (30 —Å–µ–∫—É–Ω–¥)...")
    time.sleep(30)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
    results = []
    for name, url in SERVICES.items():
        result = test_service(name, url)
        results.append(result)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    test_backend_endpoints()
    test_frontend_pages()
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\n" + "=" * 50)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    
    success_count = sum(results)
    total_count = len(results)
    
    for i, (name, url) in enumerate(SERVICES.items()):
        status = "‚úÖ OK" if results[i] else "‚ùå FAILED"
        print(f"  {name}: {status}")
    
    print(f"\nüéØ –£—Å–ø–µ—à–Ω–æ: {success_count}/{total_count}")
    
    if success_count == total_count:
        print("üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return 0
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
        return 1

if __name__ == "__main__":
    sys.exit(main())
