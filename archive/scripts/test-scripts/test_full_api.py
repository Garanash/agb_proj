#!/usr/bin/env python3
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend
sys.path.append('/Users/andreydolgov/Desktop/programming/agb_proj/backend')

from database import get_db
from api.v1.endpoints.article_matching import match_articles_with_database

async def test_full_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π API"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π API...")
    
    async for db in get_db():
        try:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –¥–∞–Ω–Ω—ã–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç AI
            articles = [{
                'contractor_article': '–û–•–ö–£-000184',
                'description': '–°–º–∞–∑–∫–∞ –∞–Ω—Ç–∏–≤–∏–±—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è GRIZZLY (–≤–µ–¥—Ä–æ 17 –∫–≥.)',
                'quantity': 10,
                'unit': '—à—Ç',
                'agb_article': None,
                'bl_article': None,
                'match_confidence': 0,
                'match_type': '–Ω–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π'
            }]
            
            print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏: {articles}")
            results = await match_articles_with_database(articles, db)
            print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {results}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            import traceback
            traceback.print_exc()
        finally:
            await db.close()
        break

if __name__ == "__main__":
    asyncio.run(test_full_api())
