#!/usr/bin/env python3
"""
–¢–µ—Å—Ç API endpoints —á–∞—Ç–∞
"""

import requests
import json

BASE_URL = "http://localhost:8000"

def test_chat_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API endpoints —á–∞—Ç–∞"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints —á–∞—Ç–∞\n")
    
    # –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    # –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    login_data = {
        "username": "chattest",
        "password": "testpassword"
    }
    
    try:
        # –õ–æ–≥–∏–Ω–∏–º—Å—è
        print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
        response = requests.post(f"{BASE_URL}/api/v1/auth/login", json=login_data)
        
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
            print(response.text)
            return
        
        token_data = response.json()
        token = token_data.get("access_token")
        
        if not token:
            print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω")
            return
        
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
        
        headers = {
            "Authorization": f"Bearer {token}",
            "Content-Type": "application/json"
        }
        
        # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–π
        print("\nüìã –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–π —á–∞—Ç–∞")
        response = requests.get(f"{BASE_URL}/api/v1/chat/sessions/", headers=headers)
        
        if response.status_code == 200:
            sessions = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–µ—Å—Å–∏–π: {len(sessions)}")
            for session in sessions:
                print(f"  ‚Ä¢ {session['title']} (ID: {session['id']})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–π: {response.status_code}")
            print(response.text)
        
        # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
        print("\nüÜï –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏")
        session_data = {
            "title": "–¢–µ—Å—Ç–æ–≤–∞—è —Å–µ—Å—Å–∏—è API"
        }
        
        response = requests.post(f"{BASE_URL}/api/v1/chat/sessions/", 
                               headers=headers, 
                               json=session_data)
        
        if response.status_code == 200:
            new_session = response.json()
            session_id = new_session['id']
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å–µ—Å—Å–∏—è: {new_session['title']} (ID: {session_id})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏: {response.status_code}")
            print(response.text)
            return
        
        # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        print("\nüí¨ –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
        message_data = {
            "content": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
            "files_data": None,
            "matching_results": None
        }
        
        response = requests.post(f"{BASE_URL}/api/v1/chat/sessions/{session_id}/messages/", 
                               headers=headers, 
                               json=message_data)
        
        if response.status_code == 200:
            message = response.json()
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message['content'][:50]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {response.status_code}")
            print(response.text)
        
        # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        print("\nüìñ –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏")
        response = requests.get(f"{BASE_URL}/api/v1/chat/sessions/{session_id}", headers=headers)
        
        if response.status_code == 200:
            session = response.json()
            messages = session.get('messages', [])
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ —Å–µ—Å—Å–∏—è —Å {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏")
            for msg in messages:
                print(f"  ‚Ä¢ {msg['message_type']}: {msg['content'][:50]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏: {response.status_code}")
            print(response.text)
        
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_chat_endpoints()
