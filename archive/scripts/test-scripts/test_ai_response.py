#!/usr/bin/env python3
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend
sys.path.append('/Users/andreydolgov/Desktop/programming/agb_proj/backend')

from database import get_db
from api.v1.endpoints.article_matching import get_ai_response, get_api_key

async def test_ai_response():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç AI"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç AI...")
    
    async for db in get_db():
        try:
            # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á
            decrypted_key = await get_api_key(db)
            
            if not decrypted_key:
                print("‚ùå –ù–µ—Ç API –∫–ª—é—á–∞")
                return
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º AI
            message = "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –∏ –Ω–∞–π–¥–∏ –∞—Ä—Ç–∏–∫—É–ª—ã:\n\n–û–•–ö–£-000184 –£–ë–† - –ö—É–Ω–¥—É–º–∏ –°–º–∞–∑–∫–∞ –∞–Ω—Ç–∏–≤–∏–±—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è GRIZZLY (–≤–µ–¥—Ä–æ 17 –∫–≥.) 10 —à—Ç"
            ai_response = await get_ai_response(message, decrypted_key, 'polza')
            
            print(f"üîç AI –æ—Ç–≤–µ—Ç: {ai_response}")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–∞—Ä—Å–∏—Ç—å JSON
            import json
            
            # –£–±–∏—Ä–∞–µ–º markdown –±–ª–æ–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
            clean_response = ai_response
            if '```json' in clean_response:
                clean_response = clean_response.split('```json')[1].split('```')[0].strip()
            elif '```' in clean_response:
                clean_response = clean_response.split('```')[1].split('```')[0].strip()
            
            print(f"üîç –û—á–∏—â–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {clean_response}")
            
            if clean_response.strip().startswith('[') and clean_response.strip().endswith(']'):
                articles = json.loads(clean_response)
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω JSON —Å {len(articles)} –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏: {articles}")
            else:
                print("‚ùå JSON –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            import traceback
            traceback.print_exc()
        finally:
            await db.close()
        break

if __name__ == "__main__":
    asyncio.run(test_ai_response())
