#!/bin/bash

# üöÄ AGB Project - –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

echo "üöÄ AGB Project - –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"
echo "================================================"

# 1. –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
log_info "–û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ —Å GitHub..."
git pull origin master

# 2. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log_info "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down -v

# 3. –û—á–∏—â–∞–µ–º Docker
log_info "–û—á–∏—â–∞–µ–º Docker..."
docker system prune -f

# 4. –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ—ç—Ç–∞–ø–Ω–æ
log_info "–ù–∞—á–∏–Ω–∞–µ–º –ø–æ—ç—Ç–∞–ø–Ω—É—é –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É..."

# PostgreSQL
log_info "–°–±–æ—Ä–∫–∞ PostgreSQL..."
docker-compose build postgres
docker-compose up -d postgres
log_info "–û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL (30 —Å–µ–∫)..."
sleep 30

# Redis
log_info "–°–±–æ—Ä–∫–∞ Redis..."
docker-compose build redis
docker-compose up -d redis
log_info "–û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Redis (15 —Å–µ–∫)..."
sleep 15

# Backend
log_info "–°–±–æ—Ä–∫–∞ Backend..."
docker-compose build backend
docker-compose up -d backend
log_info "–û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Backend (60 —Å–µ–∫)..."
sleep 60

# Frontend
log_info "–°–±–æ—Ä–∫–∞ Frontend..."
docker-compose build --no-cache frontend
docker-compose up -d frontend
log_info "–û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Frontend (120 —Å–µ–∫)..."
sleep 120

# Nginx
log_info "–°–±–æ—Ä–∫–∞ Nginx..."
docker-compose build nginx
docker-compose up -d nginx
log_info "–û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Nginx (30 —Å–µ–∫)..."
sleep 30

# 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
log_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
if docker-compose exec -T postgres pg_isready -U felix_prod_user -d agb_felix_prod > /dev/null 2>&1; then
    log_success "PostgreSQL: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
else
    log_warning "PostgreSQL: ‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
if docker-compose exec -T redis redis-cli ping > /dev/null 2>&1; then
    log_success "Redis: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
else
    log_warning "Redis: ‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Backend
if curl -f http://localhost:8000/api/health > /dev/null 2>&1; then
    log_success "Backend: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç (http://localhost:8000)"
else
    log_warning "Backend: ‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend
if curl -f http://localhost:3000 > /dev/null 2>&1; then
    log_success "Frontend: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç (http://localhost:3000)"
else
    log_warning "Frontend: ‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Nginx
if curl -f http://localhost > /dev/null 2>&1; then
    log_success "Nginx: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç (http://localhost)"
else
    log_warning "Nginx: ‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo ""
echo "üéâ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo "=================================="
echo ""
echo "üåê –î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:"
echo "   ‚Ä¢ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost"
echo "   ‚Ä¢ API: http://localhost/api"
echo "   ‚Ä¢ Backend (–ø—Ä—è–º–æ–π): http://localhost:8000"
echo "   ‚Ä¢ Frontend (–ø—Ä—è–º–æ–π): http://localhost:3000"
echo ""
echo "üë§ –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:"
echo "   ‚Ä¢ –õ–æ–≥–∏–Ω: admin"
echo "   ‚Ä¢ –ü–∞—Ä–æ–ª—å: $(grep ADMIN_PASSWORD config/env/production.env | cut -d'=' -f2)"
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   ‚Ä¢ –°—Ç–∞—Ç—É—Å: docker-compose ps"
echo "   ‚Ä¢ –õ–æ–≥–∏: docker-compose logs -f"
echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
echo "   ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã
if ! curl -f http://localhost > /dev/null 2>&1; then
    echo ""
    log_warning "–ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å—é. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏..."
    echo ""
    echo "üìã –õ–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:"
    docker-compose logs --tail=10 frontend
    echo ""
    echo "üìã –õ–æ–≥–∏ nginx:"
    docker-compose logs --tail=10 nginx
fi

log_success "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
