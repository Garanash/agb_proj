#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã

set -e

echo "üß™ AGB Project - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"
echo "==========================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP endpoint
check_endpoint() {
    local url=$1
    local name=$2
    local max_attempts=10
    local attempt=1
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ $name: $url"
    
    while [ $attempt -le $max_attempts ]; do
        if curl -f -s "$url" > /dev/null 2>&1; then
            echo "‚úÖ $name –¥–æ—Å—Ç—É–ø–µ–Ω"
            return 0
        else
            echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts –¥–ª—è $name..."
            sleep 5
            ((attempt++))
        fi
    done
    
    echo "‚ùå $name –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
    return 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps

echo ""
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º backend healthcheck
if check_endpoint "http://localhost:8000/api/health" "Backend Health"; then
    echo "üìã –î–µ—Ç–∞–ª–∏ backend health:"
    curl -s http://localhost:8000/api/health | jq . 2>/dev/null || curl -s http://localhost:8000/api/health
    echo ""
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º frontend
check_endpoint "http://localhost:3000" "Frontend"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoints
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints..."
check_endpoint "http://localhost:8000/docs" "API Documentation"
check_endpoint "http://localhost:8000/api/" "API Root"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if docker-compose exec -T postgres pg_isready -U felix_user -d agb_felix > /dev/null 2>&1; then
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü
    echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
    TABLES=$(docker-compose exec -T postgres psql -U felix_user -d agb_felix -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';" 2>/dev/null | tr -d ' \n')
    
    if [ "$TABLES" -gt 0 ]; then
        echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ $TABLES —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        USER_COUNT=$(docker-compose exec -T postgres psql -U felix_user -d agb_felix -t -c "SELECT COUNT(*) FROM users;" 2>/dev/null | tr -d ' \n')
        if [ "$USER_COUNT" -gt 0 ]; then
            echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ $USER_COUNT –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ"
        else
            echo "‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - –≤–æ–∑–º–æ–∂–Ω–æ, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        fi
    else
        echo "‚ùå –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    fi
else
    echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
fi

echo ""
echo "üìä –°–≤–æ–¥–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
echo "======================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
COMPONENTS=(
    "Backend Health:http://localhost:8000/api/health"
    "Frontend:http://localhost:3000"
    "API Docs:http://localhost:8000/docs"
    "API Root:http://localhost:8000/api/"
)

ALL_OK=true

for component in "${COMPONENTS[@]}"; do
    IFS=':' read -r name url <<< "$component"
    if curl -f -s "$url" > /dev/null 2>&1; then
        echo "‚úÖ $name - OK"
    else
        echo "‚ùå $name - FAIL"
        ALL_OK=false
    fi
done

echo ""
if [ "$ALL_OK" = true ]; then
    echo "üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!"
    echo "–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é."
    echo ""
    echo "üåê –î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ:"
    echo "   Frontend: http://localhost:3000"
    echo "   Backend:  http://localhost:8000"
    echo "   API Docs: http://localhost:8000/docs"
    echo ""
    echo "üë§ –¢–µ—Å—Ç–æ–≤—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:"
    echo "   admin / admin123"
    echo "   testuser / test123"
else
    echo "‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:"
    echo "   docker-compose logs"
    echo ""
    echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã:"
    echo "   docker-compose restart"
fi
