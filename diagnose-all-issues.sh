#!/bin/bash

# üîç AGB Project - –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0

set -e

echo "üîç AGB Project - –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º"
echo "================================================"

# –ü–æ–ª—É—á–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP=$(curl -s -4 ifconfig.me || curl -s -4 ipinfo.io/ip || curl -s -4 icanhazip.com || echo "localhost")
echo "üåê IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"

echo ""
echo "=== 1. –°–¢–ê–¢–£–° –í–°–ï–• –ö–û–ù–¢–ï–ô–ù–ï–†–û–í ==="
docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env ps

echo ""
echo "=== 2. –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í –ù–ê –°–ï–†–í–ï–†–ï ==="
echo "–ü–æ—Ä—Ç 80 (Nginx):"
ss -tlnp | grep :80 || echo "‚ùå –ü–æ—Ä—Ç 80 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"
echo "–ü–æ—Ä—Ç 8000 (Backend):"
ss -tlnp | grep :8000 || echo "‚ùå –ü–æ—Ä—Ç 8000 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"

echo ""
echo "=== 3. –ü–†–û–í–ï–†–ö–ê BACKEND –ö–û–ù–¢–ï–ô–ù–ï–†–ê ==="
echo "–°—Ç–∞—Ç—É—Å backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
docker ps | grep backend || echo "‚ùå Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"

echo "–ü—Ä–æ—Ü–µ—Å—Å—ã uvicorn –≤ backend:"
docker exec agb_backend_prod ps aux | grep uvicorn || echo "‚ùå Uvicorn –Ω–µ –∑–∞–ø—É—â–µ–Ω"

echo "–ü–æ—Ä—Ç 8000 –≤–Ω—É—Ç—Ä–∏ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
docker exec agb_backend_prod netstat -tlnp | grep 8000 || echo "‚ùå –ü–æ—Ä—Ç 8000 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"

echo "–õ–æ–≥–∏ backend (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫):"
docker logs agb_backend_prod --tail 10

echo ""
echo "=== 4. –ü–†–û–í–ï–†–ö–ê FRONTEND –ö–û–ù–¢–ï–ô–ù–ï–†–ê ==="
echo "–°—Ç–∞—Ç—É—Å frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
docker ps | grep frontend || echo "‚ùå Frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"

echo "–ü–æ—Ä—Ç 3000 –≤–Ω—É—Ç—Ä–∏ frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
docker exec agb_frontend_prod netstat -tlnp | grep 3000 || echo "‚ùå –ü–æ—Ä—Ç 3000 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"

echo "–õ–æ–≥–∏ frontend (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫):"
docker logs agb_frontend_prod --tail 5

echo ""
echo "=== 5. –ü–†–û–í–ï–†–ö–ê NGINX –ö–û–ù–¢–ï–ô–ù–ï–†–ê ==="
echo "–°—Ç–∞—Ç—É—Å nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
docker ps | grep nginx || echo "‚ùå Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"

echo "–õ–æ–≥–∏ nginx (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫):"
docker logs agb_nginx_prod --tail 5

echo ""
echo "=== 6. –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• ==="
echo "–°—Ç–∞—Ç—É—Å postgres –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
docker ps | grep postgres || echo "‚ùå Postgres –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"

echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –ë–î:"
docker exec agb_postgres_prod psql -U felix_prod_user -d agb_felix_prod -c "SELECT id, username, email, is_active FROM users LIMIT 3;" || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î"

echo ""
echo "=== 7. –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ==="
echo "NEXT_PUBLIC_API_URL –≤ production.env:"
grep NEXT_PUBLIC_API_URL config/env/production.env || echo "‚ùå NEXT_PUBLIC_API_URL –Ω–µ –Ω–∞–π–¥–µ–Ω"

echo "ADMIN_PASSWORD –≤ production.env:"
grep ADMIN_PASSWORD config/env/production.env || echo "‚ùå ADMIN_PASSWORD –Ω–µ –Ω–∞–π–¥–µ–Ω"

echo ""
echo "=== 8. –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ô ==="
echo "–¢–µ—Å—Ç backend health check:"
curl -f http://localhost:8000/api/health 2>/dev/null && echo "‚úÖ Backend health check OK" || echo "‚ùå Backend health check FAILED"

echo "–¢–µ—Å—Ç backend health check —Å–Ω–∞—Ä—É–∂–∏:"
curl -f http://$SERVER_IP:8000/api/health 2>/dev/null && echo "‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω —Å–Ω–∞—Ä—É–∂–∏" || echo "‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —Å–Ω–∞—Ä—É–∂–∏"

echo "–¢–µ—Å—Ç frontend:"
curl -f http://localhost:3000 2>/dev/null && echo "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω" || echo "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo "–¢–µ—Å—Ç nginx:"
curl -f http://localhost 2>/dev/null && echo "‚úÖ Nginx –¥–æ—Å—Ç—É–ø–µ–Ω" || echo "‚ùå Nginx –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
echo "=== 9. –¢–ï–°–¢ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò ==="
echo "–¢–µ—Å—Ç –≤—Ö–æ–¥–∞ —Å –ø–∞—Ä–æ–ª–µ–º admin123:"
curl -X POST http://$SERVER_IP:8000/api/v1/auth/login \
  -H "Content-Type: application/json" \
  -H "Origin: http://$SERVER_IP" \
  -d '{"username": "admin", "password": "admin123"}' 2>/dev/null && echo "‚úÖ –í—Ö–æ–¥ —Å admin123 OK" || echo "‚ùå –í—Ö–æ–¥ —Å admin123 FAILED"

echo "–¢–µ—Å—Ç –≤—Ö–æ–¥–∞ —Å –ø–∞—Ä–æ–ª–µ–º –∏–∑ production.env:"
ADMIN_PASS=$(grep ADMIN_PASSWORD config/env/production.env | cut -d'=' -f2)
curl -X POST http://$SERVER_IP:8000/api/v1/auth/login \
  -H "Content-Type: application/json" \
  -H "Origin: http://$SERVER_IP" \
  -d "{\"username\": \"admin\", \"password\": \"$ADMIN_PASS\"}" 2>/dev/null && echo "‚úÖ –í—Ö–æ–¥ —Å production.env –ø–∞—Ä–æ–ª–µ–º OK" || echo "‚ùå –í—Ö–æ–¥ —Å production.env –ø–∞—Ä–æ–ª–µ–º FAILED"

echo ""
echo "=== 10. –ü–†–û–í–ï–†–ö–ê CORS ==="
echo "–¢–µ—Å—Ç CORS preflight:"
curl -X OPTIONS http://$SERVER_IP:8000/api/v1/auth/login \
  -H "Origin: http://$SERVER_IP" \
  -H "Access-Control-Request-Method: POST" \
  -H "Access-Control-Request-Headers: Content-Type" \
  -v 2>&1 | grep -i "access-control" || echo "‚ùå CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

echo ""
echo "=== 11. –ü–†–û–í–ï–†–ö–ê –°–ï–¢–ò DOCKER ==="
echo "Docker —Å–µ—Ç–∏:"
docker network ls | grep app-network || echo "‚ùå –°–µ—Ç—å app-network –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤ —Å–µ—Ç–∏ app-network:"
docker network inspect docker_app-network 2>/dev/null | grep -A 5 "Containers" || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ç–∏"

echo ""
echo "=== 12. –ü–†–û–í–ï–†–ö–ê VOLUMES ==="
echo "Docker volumes:"
docker volume ls | grep docker || echo "‚ùå Volumes –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

echo ""
echo "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê"
echo "========================="
echo "üìã –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –≤—ã–≤–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–±–ª–µ–º"
