#!/bin/bash

# üìä AGB Project - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ä–µ–¥—ã
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

echo "üìä AGB Project - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ä–µ–¥—ã"
echo "======================================="

# –ü–æ–ª—É—á–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP=$(curl -s -4 ifconfig.me || curl -s -4 ipinfo.io/ip || curl -s -4 icanhazip.com || echo "localhost")
echo "üåê IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"

echo ""
log_info "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
echo "------------------"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker-compose -f config/docker/docker-compose.prod.yml ps

echo ""
log_info "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤"
echo "----------------------"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}\t{{.BlockIO}}"

echo ""
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "-------------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
check_service() {
    local url=$1
    local service=$2
    local response_time=$(curl -s -o /dev/null -w "%{time_total}" --connect-timeout 10 "$url" 2>/dev/null || echo "timeout")
    
    if [ "$response_time" != "timeout" ]; then
        log_success "$service –¥–æ—Å—Ç—É–ø–µ–Ω (${response_time}s): $url"
    else
        log_error "$service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $url"
    fi
}

check_service "http://$SERVER_IP" "Frontend (—á–µ—Ä–µ–∑ nginx)"
check_service "http://$SERVER_IP:8000/docs" "Backend API"
check_service "http://$SERVER_IP/api/health" "Backend Health"

echo ""
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤"
echo "---------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã
check_port() {
    local port=$1
    local service=$2
    if ss -tuln | grep -q ":$port " || lsof -i :$port >/dev/null 2>&1; then
        log_success "–ü–æ—Ä—Ç $port ($service) - –æ—Ç–∫—Ä—ã—Ç"
    else
        log_error "–ü–æ—Ä—Ç $port ($service) - –∑–∞–∫—Ä—ã—Ç"
    fi
}

check_port 80 "Nginx"
check_port 443 "Nginx SSL"
check_port 8000 "Backend"
check_port 3000 "Frontend"

echo ""
log_info "–õ–æ–≥–∏ –æ—à–∏–±–æ–∫ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫)"
echo "--------------------------------"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –∏–∑ –ª–æ–≥–æ–≤
echo "Backend –æ—à–∏–±–∫–∏:"
docker-compose -f config/docker/docker-compose.prod.yml logs --tail=10 backend 2>/dev/null | grep -i error || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

echo ""
echo "Frontend –æ—à–∏–±–∫–∏:"
docker-compose -f config/docker/docker-compose.prod.yml logs --tail=10 frontend 2>/dev/null | grep -i error || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

echo ""
echo "Nginx –æ—à–∏–±–∫–∏:"
docker-compose -f config/docker/docker-compose.prod.yml logs --tail=10 nginx 2>/dev/null | grep -i error || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

echo ""
log_info "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ"
echo "-------------------"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
df -h | grep -E "(Filesystem|/dev/)"

echo ""
echo "üß† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:"
free -h

echo ""
echo "‚ö° –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã:"
uptime

echo ""
log_info "–ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã"
echo "--------------"

echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã: docker-compose -f config/docker/docker-compose.prod.yml restart"
echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å backend: docker-compose -f config/docker/docker-compose.prod.yml restart backend"
echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å frontend: docker-compose -f config/docker/docker-compose.prod.yml restart frontend"
echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å nginx: docker-compose -f config/docker/docker-compose.prod.yml restart nginx"
echo "‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏: docker-compose -f config/docker/docker-compose.prod.yml logs -f"
echo "‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ: docker-compose -f config/docker/docker-compose.prod.yml down"
echo "‚Ä¢ –û–±–Ω–æ–≤–∏—Ç—å –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å: docker-compose -f config/docker/docker-compose.prod.yml pull && docker-compose -f config/docker/docker-compose.prod.yml up -d"
