#!/bin/bash

# üöÄ AGB Project - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ä–µ–¥—ã –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 2.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

echo "üöÄ AGB Project - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω —Å—Ä–µ–¥—ã"
echo "=================================================="

# –ü–æ–ª—É—á–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP=$(curl -s -4 ifconfig.me || curl -s -4 ipinfo.io/ip || curl -s -4 icanhazip.com || echo "localhost")
echo "üåê IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"

echo ""
log_info "–®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"
echo "-----------------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
if ! command -v docker >/dev/null 2>&1; then
    log_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose
if ! command -v docker-compose >/dev/null 2>&1; then
    log_error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
    exit 1
fi

log_success "–í—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"

echo ""
log_info "–®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
echo "-----------------------------"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
mkdir -p scripts/setup
mkdir -p config/env

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f "scripts/setup/init-production-db.sh" ]; then
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î..."
    cat > scripts/setup/init-production-db.sh << 'EOF'
#!/bin/bash
set -e
echo "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω..."
psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE EXTENSION IF NOT EXISTS "pg_trgm";
    GRANT ALL PRIVILEGES ON DATABASE $POSTGRES_DB TO $POSTGRES_USER;
    GRANT ALL ON SCHEMA public TO $POSTGRES_USER;
    GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO $POSTGRES_USER;
    GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO $POSTGRES_USER;
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO $POSTGRES_USER;
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO $POSTGRES_USER;
EOSQL
echo "‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
EOF
    chmod +x scripts/setup/init-production-db.sh
fi

# –°–æ–∑–¥–∞–µ–º production.env –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f "config/env/production.env" ]; then
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
    DB_PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-25)
    SECRET_KEY=$(openssl rand -base64 64 | tr -d "=+/" | cut -c1-50)
    ADMIN_PASSWORD=$(openssl rand -base64 16 | tr -d "=+/" | cut -c1-12)
    
    cat > config/env/production.env << EOF
# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL
POSTGRES_DB=agb_felix_prod
POSTGRES_USER=felix_prod_user
POSTGRES_PASSWORD=$DB_PASSWORD
DATABASE_URL=postgresql://felix_prod_user:$DB_PASSWORD@postgres:5432/agb_felix_prod

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
SECRET_KEY=$SECRET_KEY
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=1440

# –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã
ADMIN_USERNAME=admin
ADMIN_PASSWORD=$ADMIN_PASSWORD
ADMIN_EMAIL=admin@$SERVER_IP
ADMIN_FIRST_NAME=–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
ADMIN_LAST_NAME=–°–∏—Å—Ç–µ–º—ã

# API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
NEXT_PUBLIC_API_URL=http://$SERVER_IP/api

# Nginx
NGINX_PORT=80
NGINX_SSL_PORT=443

# Redis
REDIS_URL=redis://redis:6379/0

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_LEVEL=INFO
LOG_FILE=backend.log

# –§–∞–π–ª—ã
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=xlsx,xls,pdf,doc,docx,txt,jpg,jpeg,png

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
ENABLE_METRICS=true
METRICS_PORT=9090
EOF
    
    log_success "–§–∞–π–ª config/env/production.env —Å–æ–∑–¥–∞–Ω"
    log_warning "–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏:"
    echo "   ‚Ä¢ –ü–∞—Ä–æ–ª—å –ë–î: $DB_PASSWORD"
    echo "   ‚Ä¢ –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞: $ADMIN_PASSWORD"
    echo "   ‚Ä¢ SECRET_KEY: $SECRET_KEY"
else
    log_success "–§–∞–π–ª config/env/production.env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

echo ""
log_info "–®–∞–≥ 3: –û—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞"
echo "-----------------------------"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ—á–∏—â–∞–µ–º volumes
log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env down -v 2>/dev/null || true

# –û—á–∏—â–∞–µ–º Docker —Å–µ—Ç–∏
log_info "–û—á–∏—Å—Ç–∫–∞ Docker —Å–µ—Ç–µ–π..."
docker network prune -f 2>/dev/null || true

echo ""
log_info "–®–∞–≥ 4: –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "----------------------------"

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π
log_info "–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env up -d

echo ""
log_info "–®–∞–≥ 5: –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "------------------------------------"

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
log_info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (180 —Å–µ–∫—É–Ω–¥)..."
sleep 180

echo ""
log_info "–®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞"
echo "------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env ps

echo ""
log_info "–®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"
echo "---------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
check_service() {
    local url=$1
    local service=$2
    if curl -s --connect-timeout 10 "$url" > /dev/null; then
        log_success "$service –¥–æ—Å—Ç—É–ø–µ–Ω: $url"
    else
        log_error "$service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $url"
    fi
}

check_service "http://localhost" "Frontend (—á–µ—Ä–µ–∑ nginx)"
check_service "http://localhost:8000/docs" "Backend API"
check_service "http://localhost/api/health" "Backend Health"

echo ""
log_success "üéâ –ü—Ä–æ–¥–∞–∫—à–Ω —Å—Ä–µ–¥–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "‚Ä¢ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost"
echo "‚Ä¢ Backend API: http://localhost:8000"
echo "‚Ä¢ Swagger UI: http://localhost:8000/docs"
echo "‚Ä¢ Health Check: http://localhost/api/health"
echo ""
echo "üìã –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:"
echo "‚Ä¢ –õ–æ–≥–∏–Ω: admin"
echo "‚Ä¢ –ü–∞—Ä–æ–ª—å: $(grep ADMIN_PASSWORD config/env/production.env | cut -d'=' -f2)"
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏:"
echo "‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env down"
echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å: docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env restart"
echo "‚Ä¢ –õ–æ–≥–∏: docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env logs -f"
echo ""
echo "üìã –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
echo "‚Ä¢ –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env ps"
echo "‚Ä¢ –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env logs"
echo "‚Ä¢ –õ–æ–≥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞: docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env logs -f [service_name]"
