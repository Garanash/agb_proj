#!/usr/bin/env python3
"""
–°–ö–†–ò–ü–¢ –ú–ò–ì–†–ê–¶–ò–ò –ë–ê–ó–´ –î–ê–ù–ù–´–•
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
import asyncpg
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def migrate_database():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Å—Ç–æ–ª–±—Ü–æ–≤"""

    print("üîÑ –ù–ê–ß–ò–ù–ê–ï–ú –ú–ò–ì–†–ê–¶–ò–Æ –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 60)

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    db_host = os.getenv("DB_HOST", "postgres")
    db_port = os.getenv("DB_PORT", "5432")
    db_name = os.getenv("POSTGRES_DB", "agb_felix")
    db_user = os.getenv("POSTGRES_USER", "felix_user")
    db_password = os.getenv("POSTGRES_PASSWORD", "felix_password")

    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        print(f"üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {db_name}...")
        conn = await asyncpg.connect(
            host=db_host,
            port=db_port,
            database=db_name,
            user=db_user,
            password=db_password
        )

        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

        # 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É company_employees
        print("\nüìã 1. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã company_employees...")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç–æ–ª–±–µ—Ü full_name (—Å—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
        result = await conn.fetchval("""
            SELECT column_name
            FROM information_schema.columns
            WHERE table_name = 'company_employees' AND column_name = 'full_name'
        """)

        if result:
            print("   üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å full_name")
            print("   üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö...")

            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã
            await conn.execute("""
                ALTER TABLE company_employees
                ADD COLUMN IF NOT EXISTS first_name VARCHAR(255),
                ADD COLUMN IF NOT EXISTS last_name VARCHAR(255),
                ADD COLUMN IF NOT EXISTS middle_name VARCHAR(255)
            """)

            # –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ full_name –≤ –Ω–æ–≤—ã–µ –ø–æ–ª—è
            await conn.execute("""
                UPDATE company_employees
                SET
                    first_name = CASE
                        WHEN array_length(string_to_array(full_name, ' '), 1) >= 1
                        THEN (string_to_array(full_name, ' '))[1]
                        ELSE ''
                    END,
                    last_name = CASE
                        WHEN array_length(string_to_array(full_name, ' '), 1) >= 2
                        THEN (string_to_array(full_name, ' '))[2]
                        ELSE ''
                    END,
                    middle_name = CASE
                        WHEN array_length(string_to_array(full_name, ' '), 1) >= 3
                        THEN (string_to_array(full_name, ' '))[3]
                        ELSE NULL
                    END
                WHERE first_name IS NULL OR first_name = ''
            """)

            print("   ‚úÖ –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç)
        await conn.execute("""
            ALTER TABLE company_employees
            ADD COLUMN IF NOT EXISTS first_name VARCHAR(255) DEFAULT '',
            ADD COLUMN IF NOT EXISTS last_name VARCHAR(255) DEFAULT '',
            ADD COLUMN IF NOT EXISTS middle_name VARCHAR(255),
            ADD COLUMN IF NOT EXISTS position VARCHAR(255) DEFAULT '',
            ADD COLUMN IF NOT EXISTS department_id INTEGER REFERENCES departments(id),
            ADD COLUMN IF NOT EXISTS email VARCHAR(255),
            ADD COLUMN IF NOT EXISTS phone VARCHAR(255),
            ADD COLUMN IF NOT EXISTS avatar_url TEXT,
            ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT TRUE,
            ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        """)

        print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ company_employees –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")

        # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É chat_rooms
        print("\nüìã 2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_rooms...")

        await conn.execute("""
            ALTER TABLE chat_rooms
            ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT TRUE,
            ADD COLUMN IF NOT EXISTS created_by INTEGER REFERENCES users(id),
            ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        """)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
        await conn.execute("""
            UPDATE chat_rooms
            SET
                created_by = 1,
                is_active = TRUE
            WHERE created_by IS NULL
        """)

        print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ chat_rooms –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")

        # 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É chat_folders
        print("\nüìã 3. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_folders...")

        await conn.execute("""
            ALTER TABLE chat_folders
            ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id),
            ADD COLUMN IF NOT EXISTS room_id INTEGER REFERENCES chat_rooms(id),
            ADD COLUMN IF NOT EXISTS created_by INTEGER REFERENCES users(id),
            ADD COLUMN IF NOT EXISTS is_default BOOLEAN DEFAULT FALSE,
            ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        """)

        print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ chat_folders –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")

        # 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É chat_participants
        print("\nüìã 4. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_participants...")

        await conn.execute("""
            ALTER TABLE chat_participants
            ADD COLUMN IF NOT EXISTS room_id INTEGER REFERENCES chat_rooms(id),
            ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id),
            ADD COLUMN IF NOT EXISTS bot_id INTEGER REFERENCES chat_bots(id),
            ADD COLUMN IF NOT EXISTS is_admin BOOLEAN DEFAULT FALSE
        """)

        # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª–µ–π –≤ –Ω–æ–≤—ã–µ
        await conn.execute("""
            UPDATE chat_participants
            SET room_id = chat_room_id
            WHERE room_id IS NULL AND chat_room_id IS NOT NULL
        """)

        print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ chat_participants –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")

        # 5. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É chat_messages
        print("\nüìã 5. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_messages...")

        await conn.execute("""
            ALTER TABLE chat_messages
            ADD COLUMN IF NOT EXISTS room_id INTEGER REFERENCES chat_rooms(id),
            ADD COLUMN IF NOT EXISTS sender_id INTEGER REFERENCES users(id),
            ADD COLUMN IF NOT EXISTS bot_id INTEGER REFERENCES chat_bots(id),
            ADD COLUMN IF NOT EXISTS content TEXT,
            ADD COLUMN IF NOT EXISTS is_edited BOOLEAN DEFAULT FALSE,
            ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        """)

        # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª–µ–π –≤ –Ω–æ–≤—ã–µ
        await conn.execute("""
            UPDATE chat_messages
            SET room_id = chat_room_id
            WHERE room_id IS NULL AND chat_room_id IS NOT NULL
        """)

        print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ chat_messages –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")

        # 6. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É chat_room_folders
        print("\nüìã 6. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_room_folders...")

        await conn.execute("""
            ALTER TABLE chat_room_folders
            ADD COLUMN IF NOT EXISTS room_id INTEGER REFERENCES chat_rooms(id),
            ADD COLUMN IF NOT EXISTS folder_id INTEGER REFERENCES chat_folders(id),
            ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        """)

        print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ chat_room_folders –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")

        # 7. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É events
        print("\nüìã 7. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã events...")

        await conn.execute("""
            ALTER TABLE events
            ADD COLUMN IF NOT EXISTS organizer_id INTEGER REFERENCES users(id),
            ADD COLUMN IF NOT EXISTS is_public BOOLEAN DEFAULT FALSE,
            ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT TRUE,
            ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        """)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
        await conn.execute("""
            UPDATE events
            SET
                organizer_id = 1,
                is_public = FALSE,
                is_active = TRUE
            WHERE organizer_id IS NULL
        """)

        print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ events –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")

        # 8. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É event_participants
        print("\nüìã 8. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã event_participants...")

        await conn.execute("""
            ALTER TABLE event_participants
            ADD COLUMN IF NOT EXISTS event_id INTEGER REFERENCES events(id),
            ADD COLUMN IF NOT EXISTS user_id INTEGER REFERENCES users(id),
            ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        """)

        print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ event_participants –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")

        # 9. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        print("\nüìã 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü...")

        tables_to_check = [
            'company_employees', 'chat_rooms', 'chat_folders',
            'chat_participants', 'chat_messages', 'chat_room_folders',
            'events', 'event_participants'
        ]

        for table_name in tables_to_check:
            result = await conn.fetch(f"""
                SELECT column_name, data_type, is_nullable
                FROM information_schema.columns
                WHERE table_name = '{table_name}'
                ORDER BY ordinal_position
            """)

            if result:
                print(f"   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ {table_name}: {len(result)} —Å—Ç–æ–ª–±—Ü–æ–≤")
            else:
                print(f"   ‚ùå –¢–∞–±–ª–∏—Ü–∞ {table_name}: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

        await conn.close()

        print("\n" + "=" * 60)
        print("üéâ –ú–ò–ì–†–ê–¶–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–• –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ú–ò–ì–†–ê–¶–ò–ò:")
        print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –≤—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã")
        print("   ‚úÖ –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª–µ–π")
        print("   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏")
        print("   ‚úÖ –°–æ–∑–¥–∞–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–≤—è–∑–∏")
        print("\nüîÑ –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã:")
        print("   docker-compose restart")
        print("\nüß™ –ò –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É:")
        print("   python test_all_endpoints.py")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

    return True

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = await migrate_database()
    if success:
        print("\nüéØ –ú–ò–ì–†–ê–¶–ò–Ø –ü–†–û–®–õ–ê –£–°–ü–ï–®–ù–û!")
        print("   –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
    else:
        print("\n‚ùå –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ò–õ–ê–°–¨ –° –û–®–ò–ë–ö–ê–ú–ò!")

if __name__ == "__main__":
    asyncio.run(main())
