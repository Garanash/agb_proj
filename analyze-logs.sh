#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤—Å–µ—Ö –ª–æ–≥–æ–≤ Docker
# –ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º

set -e

echo "üîç –ê–ù–ê–õ–ò–ó –õ–û–ì–û–í DOCKER"
echo "======================"
echo ""

# 1. –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "1. üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps
echo ""

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
echo "2. üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
docker stats --no-stream agb_backend agb_frontend agb_nginx agb_postgres 2>/dev/null || echo "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
echo ""

# 3. –õ–æ–≥–∏ –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
SERVICES=("postgres" "backend" "frontend" "nginx")

for service in "${SERVICES[@]}"; do
    echo "3. üìù –õ–æ–≥–∏ $service:"
    echo "----------------------------------------"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    if docker-compose ps $service | grep -q "Up"; then
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤
        docker-compose logs --tail=20 $service 2>&1
    else
        echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $service –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi

    echo ""
    echo "----------------------------------------"
    echo ""
done

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
echo "4. üåê –°–µ—Ç–µ–≤—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
echo "   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"
netstat -tlnp 2>/dev/null | grep -E "(80|5432)" || ss -tlnp | grep -E "(80|5432)" || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Ä—Ç—ã"

echo ""
echo "   - –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Å–µ—Ç–µ–π:"
docker network ls | grep agb || echo "–°–µ—Ç—å agb –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

echo ""

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "5. ‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"

echo "   - Docker Compose —Ñ–∞–π–ª:"
if [ -f "docker-compose.yml" ]; then
    echo "   ‚úÖ docker-compose.yml —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    echo "   ‚ùå docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo "   - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
if [ -f ".env" ]; then
    echo "   ‚úÖ .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    echo "   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env:"
    cat .env | sed 's/^/     /'
else
    echo "   ‚ùå .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "6. üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤:"

echo "   - PostgreSQL:"
if docker-compose exec -T postgres pg_isready -U felix_user -d agb_felix >/dev/null 2>&1; then
    echo "   ‚úÖ PostgreSQL –≥–æ—Ç–æ–≤"
else
    echo "   ‚ùå PostgreSQL –Ω–µ –≥–æ—Ç–æ–≤"
fi

echo "   - Backend API:"
API_RESPONSE=$(curl -s --max-time 5 http://localhost/api/health 2>/dev/null)
if echo "$API_RESPONSE" | grep -q "healthy"; then
    echo "   ‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç: $API_RESPONSE"
else
    echo "   ‚ùå Backend API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: $API_RESPONSE"
fi

echo "   - Frontend:"
FRONTEND_RESPONSE=$(curl -s --max-time 5 -I http://localhost/ 2>/dev/null | head -1)
if echo "$FRONTEND_RESPONSE" | grep -q "200"; then
    echo "   ‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç: $FRONTEND_RESPONSE"
else
    echo "   ‚ùå Frontend –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: $FRONTEND_RESPONSE"
fi

echo "   - Nginx:"
NGINX_RESPONSE=$(curl -s --max-time 5 http://localhost/health 2>/dev/null)
if [ "$NGINX_RESPONSE" = "healthy" ]; then
    echo "   ‚úÖ Nginx health check —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "   ‚ùå Nginx health check –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: $NGINX_RESPONSE"
fi

echo ""

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏
echo "7. üîç –ü–æ–∏—Å–∫ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫:"

echo "   - –û—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö backend:"
docker-compose logs backend 2>&1 | grep -i error | tail -5 || echo "   ‚úÖ –û—à–∏–±–æ–∫ –≤ backend –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

echo ""
echo "   - –û—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö frontend:"
docker-compose logs frontend 2>&1 | grep -i error | tail -5 || echo "   ‚úÖ –û—à–∏–±–æ–∫ –≤ frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

echo ""
echo "   - –û—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö nginx:"
docker-compose logs nginx 2>&1 | grep -i error | tail -5 || echo "   ‚úÖ –û—à–∏–±–æ–∫ –≤ nginx –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

echo ""

# 8. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo "8. üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
echo ""

if ! docker-compose ps | grep -q "Up.*backend"; then
    echo "   üîß Backend –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:"
    echo "      docker-compose up -d backend"
fi

if ! docker-compose ps | grep -q "Up.*frontend"; then
    echo "   üîß Frontend –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:"
    echo "      docker-compose up -d frontend"
fi

if ! docker-compose ps | grep -q "Up.*nginx"; then
    echo "   üîß Nginx –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:"
    echo "      docker-compose up -d nginx"
fi

if ! curl -s http://localhost/api/health | grep -q "healthy"; then
    echo "   üîß API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    echo "      docker-compose logs backend"
fi

echo ""
echo "   üìû –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
echo "      ./debug-browser.sh"
echo "      docker-compose logs -f"
echo "      docker-compose restart"
