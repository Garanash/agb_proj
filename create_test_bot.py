#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ò–ò –±–æ—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend –≤ sys.path
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from database import get_db
from models import ChatBot
from sqlalchemy.ext.asyncio import AsyncSession

async def create_test_bot():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    async for db in get_db():
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç
            existing_bot = await db.execute(
                "SELECT id FROM chat_bots WHERE name = '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫'"
            )
            if existing_bot.fetchone():
                print("–¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
                return
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞
            test_bot = ChatBot(
                name="–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫",
                description="–¢–µ—Å—Ç–æ–≤—ã–π –ò–ò –±–æ—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —á–∞—Ç–∞",
                api_key="test_api_key_123",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API –∫–ª—é—á
                bot_model_id="gpt-3.5-turbo",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å
                system_prompt="–í—ã - –ø–æ–ª–µ–∑–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–π—Ç–µ –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.",
                is_active=True
            )
            
            db.add(test_bot)
            await db.commit()
            
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
            print(f"ID: {test_bot.id}")
            print(f"–ò–º—è: {test_bot.name}")
            print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {test_bot.description}")
            print(f"–ú–æ–¥–µ–ª—å: {test_bot.bot_model_id}")
            print(f"–ê–∫—Ç–∏–≤–µ–Ω: {'–î–∞' if test_bot.is_active else '–ù–µ—Ç'}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–æ—Ç–∞: {e}")
            await db.rollback()
        finally:
            await db.close()
        break

if __name__ == "__main__":
    print("ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ò–ò –±–æ—Ç–∞...")
    asyncio.run(create_test_bot())
