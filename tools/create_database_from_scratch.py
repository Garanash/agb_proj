#!/usr/bin/env python3
"""
–°–ö–†–ò–ü–¢ –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–• –° –ù–£–õ–Ø
–°–æ–∑–¥–∞–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –±–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–π
"""
import asyncio
import asyncpg
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def create_database_from_scratch():
    """–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –Ω—É–ª—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π"""

    print("üîÑ –°–û–ó–î–ê–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–• –° –ù–£–õ–Ø")
    print("=" * 60)

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    db_host = os.getenv("DB_HOST", "postgres")
    db_port = os.getenv("DB_PORT", "5432")
    db_name = os.getenv("POSTGRES_DB", "agb_felix")
    db_user = os.getenv("POSTGRES_USER", "felix_user")
    db_password = os.getenv("POSTGRES_PASSWORD", "felix_password")

    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        print(f"üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {db_name}...")
        conn = await asyncpg.connect(
            host=db_host,
            port=db_port,
            database=db_name,
            user=db_user,
            password=db_password
        )

        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã (–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å)
        print("\nüóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü...")
        await conn.execute("""
            DROP TABLE IF EXISTS chat_room_folders CASCADE;
            DROP TABLE IF EXISTS chat_participants CASCADE;
            DROP TABLE IF EXISTS chat_messages CASCADE;
            DROP TABLE IF EXISTS chat_folders CASCADE;
            DROP TABLE IF EXISTS chat_rooms CASCADE;
            DROP TABLE IF EXISTS chat_bots CASCADE;
            DROP TABLE IF EXISTS event_participants CASCADE;
            DROP TABLE IF EXISTS events CASCADE;
            DROP TABLE IF EXISTS company_employees CASCADE;
            DROP TABLE IF EXISTS news CASCADE;
            DROP TABLE IF EXISTS users CASCADE;
            DROP TABLE IF EXISTS departments CASCADE;
            DROP TABLE IF EXISTS ved_passports CASCADE;
            DROP TABLE IF EXISTS ved_nomenclature CASCADE;
            DROP TABLE IF EXISTS teams CASCADE;
            DROP TABLE IF EXISTS team_members CASCADE;
        """)

        print("‚úÖ –°—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã —É–¥–∞–ª–µ–Ω—ã")

        # 1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã departments
        print("\nüìã 1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã departments...")
        await conn.execute("""
            CREATE TABLE departments (
                id SERIAL PRIMARY KEY,
                name VARCHAR(255) NOT NULL,
                description TEXT,
                head_id INTEGER REFERENCES users(id),
                is_active BOOLEAN DEFAULT TRUE,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã users
        print("üìã 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã users...")
        await conn.execute("""
            CREATE TABLE users (
                id SERIAL PRIMARY KEY,
                username VARCHAR(255) UNIQUE NOT NULL,
                email VARCHAR(255) UNIQUE NOT NULL,
                first_name VARCHAR(255),
                last_name VARCHAR(255),
                middle_name VARCHAR(255),
                hashed_password VARCHAR(255) NOT NULL,
                role VARCHAR(50) DEFAULT 'user',
                phone VARCHAR(20),
                department_id INTEGER REFERENCES departments(id),
                position VARCHAR(255),
                avatar_url TEXT,
                is_active BOOLEAN DEFAULT TRUE,
                last_login TIMESTAMP WITH TIME ZONE,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã teams
        print("üìã 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã teams...")
        await conn.execute("""
            CREATE TABLE teams (
                id SERIAL PRIMARY KEY,
                name VARCHAR(255) NOT NULL,
                description TEXT,
                created_by INTEGER REFERENCES users(id),
                is_active BOOLEAN DEFAULT TRUE,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 4. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã team_members
        print("üìã 4. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã team_members...")
        await conn.execute("""
            CREATE TABLE team_members (
                id SERIAL PRIMARY KEY,
                team_id INTEGER REFERENCES teams(id) NOT NULL,
                user_id INTEGER REFERENCES users(id) NOT NULL,
                role VARCHAR(50) DEFAULT 'member',
                joined_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 5. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã company_employees
        print("üìã 5. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã company_employees...")
        await conn.execute("""
            CREATE TABLE company_employees (
                id SERIAL PRIMARY KEY,
                first_name VARCHAR(255) DEFAULT '',
                last_name VARCHAR(255) DEFAULT '',
                middle_name VARCHAR(255),
                position VARCHAR(255) DEFAULT '',
                department_id INTEGER REFERENCES departments(id),
                email VARCHAR(255),
                phone VARCHAR(255),
                avatar_url TEXT,
                is_active BOOLEAN DEFAULT TRUE,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 6. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã news
        print("üìã 6. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã news...")
        await conn.execute("""
            CREATE TABLE news (
                id SERIAL PRIMARY KEY,
                title VARCHAR(500) NOT NULL,
                content TEXT NOT NULL,
                author_name VARCHAR(255),
                category VARCHAR(100),
                is_published BOOLEAN DEFAULT FALSE,
                published_at TIMESTAMP WITH TIME ZONE,
                created_by INTEGER REFERENCES users(id),
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 7. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã ved_nomenclature
        print("üìã 7. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã ved_nomenclature...")
        await conn.execute("""
            CREATE TABLE ved_nomenclature (
                id SERIAL PRIMARY KEY,
                code_1c VARCHAR(50) UNIQUE NOT NULL,
                name VARCHAR(255) NOT NULL,
                article VARCHAR(100) NOT NULL,
                matrix VARCHAR(50) NOT NULL,
                drilling_depth VARCHAR(50),
                height VARCHAR(50),
                thread VARCHAR(10),
                product_type VARCHAR(100) NOT NULL,
                is_active BOOLEAN DEFAULT TRUE,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 8. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã ved_passports
        print("üìã 8. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã ved_passports...")
        await conn.execute("""
            CREATE TABLE ved_passports (
                id SERIAL PRIMARY KEY,
                passport_number VARCHAR(100) UNIQUE NOT NULL,
                title VARCHAR(500),
                description TEXT,
                status VARCHAR(50) DEFAULT 'active',
                order_number VARCHAR(100) NOT NULL,
                quantity INTEGER DEFAULT 1,
                created_by INTEGER REFERENCES users(id) NOT NULL,
                nomenclature_id INTEGER REFERENCES ved_nomenclature(id) NOT NULL,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 9. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã events
        print("üìã 9. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã events...")
        await conn.execute("""
            CREATE TABLE events (
                id SERIAL PRIMARY KEY,
                title VARCHAR(500) NOT NULL,
                description TEXT,
                start_date TIMESTAMP WITH TIME ZONE NOT NULL,
                end_date TIMESTAMP WITH TIME ZONE NOT NULL,
                location VARCHAR(255),
                organizer_id INTEGER REFERENCES users(id),
                is_public BOOLEAN DEFAULT FALSE,
                is_active BOOLEAN DEFAULT TRUE,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 10. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã event_participants
        print("üìã 10. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã event_participants...")
        await conn.execute("""
            CREATE TABLE event_participants (
                id SERIAL PRIMARY KEY,
                event_id INTEGER REFERENCES events(id) NOT NULL,
                user_id INTEGER REFERENCES users(id) NOT NULL,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 11. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_bots
        print("üìã 11. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_bots...")
        await conn.execute("""
            CREATE TABLE chat_bots (
                id SERIAL PRIMARY KEY,
                name VARCHAR(255) NOT NULL,
                description TEXT,
                is_active BOOLEAN DEFAULT TRUE,
                created_by INTEGER REFERENCES users(id),
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 12. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_rooms
        print("üìã 12. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_rooms...")
        await conn.execute("""
            CREATE TABLE chat_rooms (
                id SERIAL PRIMARY KEY,
                name VARCHAR(255) NOT NULL,
                description TEXT,
                is_private BOOLEAN DEFAULT FALSE,
                is_active BOOLEAN DEFAULT TRUE,
                created_by INTEGER REFERENCES users(id) NOT NULL,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 13. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_folders
        print("üìã 13. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_folders...")
        await conn.execute("""
            CREATE TABLE chat_folders (
                id SERIAL PRIMARY KEY,
                name VARCHAR(255) NOT NULL,
                description TEXT,
                user_id INTEGER REFERENCES users(id),
                room_id INTEGER REFERENCES chat_rooms(id),
                created_by INTEGER REFERENCES users(id) NOT NULL,
                is_default BOOLEAN DEFAULT FALSE,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 14. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_participants
        print("üìã 14. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_participants...")
        await conn.execute("""
            CREATE TABLE chat_participants (
                id SERIAL PRIMARY KEY,
                room_id INTEGER REFERENCES chat_rooms(id) NOT NULL,
                user_id INTEGER REFERENCES users(id),
                bot_id INTEGER REFERENCES chat_bots(id),
                is_admin BOOLEAN DEFAULT FALSE,
                joined_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                last_read_at TIMESTAMP WITH TIME ZONE
            );
        """)

        # 15. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_messages
        print("üìã 15. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_messages...")
        await conn.execute("""
            CREATE TABLE chat_messages (
                id SERIAL PRIMARY KEY,
                room_id INTEGER REFERENCES chat_rooms(id) NOT NULL,
                sender_id INTEGER REFERENCES users(id),
                bot_id INTEGER REFERENCES chat_bots(id),
                content TEXT NOT NULL,
                is_edited BOOLEAN DEFAULT FALSE,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # 16. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_room_folders
        print("üìã 16. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã chat_room_folders...")
        await conn.execute("""
            CREATE TABLE chat_room_folders (
                id SERIAL PRIMARY KEY,
                room_id INTEGER REFERENCES chat_rooms(id) NOT NULL,
                folder_id INTEGER REFERENCES chat_folders(id) NOT NULL,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
        """)

        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        print("üìã 17. –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...")
        await conn.execute("""
            CREATE INDEX idx_users_username ON users(username);
            CREATE INDEX idx_users_email ON users(email);
            CREATE INDEX idx_chat_messages_room_id ON chat_messages(room_id);
            CREATE INDEX idx_chat_messages_created_at ON chat_messages(created_at);
            CREATE INDEX idx_chat_participants_room_id ON chat_participants(room_id);
            CREATE INDEX idx_events_start_date ON events(start_date);
            CREATE INDEX idx_events_end_date ON events(end_date);
        """)

        await conn.close()

        print("\n" + "=" * 60)
        print("üéâ –ë–ê–ó–ê –î–ê–ù–ù–´–• –°–û–ó–î–ê–ù–ê –£–°–ü–ï–®–ù–û!")
        print("\nüìä –°–¢–†–£–ö–¢–£–†–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•:")
        print("   ‚úÖ departments - –æ—Ç–¥–µ–ª—ã")
        print("   ‚úÖ users - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
        print("   ‚úÖ teams - –∫–æ–º–∞–Ω–¥—ã")
        print("   ‚úÖ team_members - —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥")
        print("   ‚úÖ company_employees - —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏")
        print("   ‚úÖ news - –Ω–æ–≤–æ—Å—Ç–∏")
        print("   ‚úÖ ved_nomenclature - –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞ –í–≠–î")
        print("   ‚úÖ ved_passports - –í–≠–î –ø–∞—Å–ø–æ—Ä—Ç–∞")
        print("   ‚úÖ events - —Å–æ–±—ã—Ç–∏—è")
        print("   ‚úÖ event_participants - —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π")
        print("   ‚úÖ chat_bots - —á–∞—Ç –±–æ—Ç—ã")
        print("   ‚úÖ chat_rooms - —á–∞—Ç –∫–æ–º–Ω–∞—Ç—ã")
        print("   ‚úÖ chat_folders - –ø–∞–ø–∫–∏ —á–∞—Ç–æ–≤")
        print("   ‚úÖ chat_participants - —É—á–∞—Å—Ç–Ω–∏–∫–∏ —á–∞—Ç–æ–≤")
        print("   ‚úÖ chat_messages - —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–æ–≤")
        print("   ‚úÖ chat_room_folders - —Å–≤—è–∑–∏ –∫–æ–º–Ω–∞—Ç –∏ –ø–∞–ø–æ–∫")
        print("   ‚úÖ –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
        print("\nüîÑ –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã:")
        print("   docker-compose restart")
        print("\nüìã –ò —Å–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
        print("   python create_admin_db.py")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()
        return False

    return True

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = await create_database_from_scratch()
    if success:
        print("\nüéØ –ë–ê–ó–ê –î–ê–ù–ù–´–• –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")
        print("   –¢–µ–ø–µ—Ä—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")
    else:
        print("\n‚ùå –û–®–ò–ë–ö–ê –°–û–ó–î–ê–ù–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–•!")

if __name__ == "__main__":
    asyncio.run(main())
