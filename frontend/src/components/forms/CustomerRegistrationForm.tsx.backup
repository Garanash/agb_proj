'use client'

import React, { useState } from 'react'
import { getApiUrl } from '@/utils/api'
import LoginSuccessModal from './LoginSuccessModal'

interface CustomerRegistrationFormProps {
  onSuccess?: (username: string) => void
  showLoginModal?: boolean
}

const CustomerRegistrationForm: React.FC<CustomerRegistrationFormProps> = ({
  onSuccess
}) => {
  const [formData, setFormData] = useState({
    // Данные пользователя
    first_name: '',
    last_name: '',
    middle_name: '',
    phone: '',

    // Данные для входа
    email: '',
    password: '',
    confirmPassword: '',

    // Данные компании
    company_name: '',
    contact_person: '',
    company_phone: '',
    company_email: ''
  })

  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState('')
  const [success, setSuccess] = useState('')
  const [showLoginModal, setShowLoginModal] = useState(false)
  const [generatedUsername, setGeneratedUsername] = useState('')

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: value
    }))
  }

  const validateForm = () => {
    // Валидация данных пользователя
    if (!formData.first_name.trim()) return 'Имя обязательно'
    if (!formData.last_name.trim()) return 'Фамилия обязательна'

    // Валидация данных для входа
    if (!formData.email.trim()) return 'Email обязателен'
    if (!formData.password.trim()) return 'Пароль обязателен'
    if (formData.password.length < 6) return 'Пароль должен быть не менее 6 символов'
    if (formData.password !== formData.confirmPassword) return 'Пароли не совпадают'

    // Валидация данных компании
    if (!formData.company_name.trim()) return 'Название компании обязательно'
    if (!formData.contact_person.trim()) return 'Контактное лицо обязательно'
    if (!formData.company_phone.trim()) return 'Телефон компании обязателен'
    if (!formData.company_email.trim()) return 'Email компании обязателен'

    return null
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()

    const validationError = validateForm()
    if (validationError) {
      setError(validationError)
      return
    }

    setIsLoading(true)
    setError('')
    setSuccess('')

    try {
      const registrationData = {
        // Данные пользователя
        first_name: formData.first_name,
        last_name: formData.last_name,
        middle_name: formData.middle_name || undefined,
        phone: formData.phone || undefined,

        // Данные для входа
        email: formData.email,
        password: formData.password,

        // Данные компании
        company_name: formData.company_name,
        contact_person: formData.contact_person,
        company_phone: formData.company_phone,
        company_email: formData.company_email
      }

      const response = await fetch(`${getApiUrl()}/api/customers/register`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(registrationData)
      })

      if (response.ok) {
        const result = await response.json()
        setFormData({
          // Данные пользователя
          first_name: '',
          last_name: '',
          middle_name: '',
          phone: '',

          // Данные для входа
          email: '',
          password: '',
          confirmPassword: '',

          // Данные компании
          company_name: '',
          contact_person: '',
          company_phone: '',
          company_email: ''
        })
        onSuccess?.(result.username)
      } else {
        const errorData = await response.json()
        setError(errorData.detail || 'Ошибка при регистрации')
      }
    } catch (error) {
      setError('Произошла ошибка при подключении к серверу')
    } finally {
      setIsLoading(false)
    }
  }

  return (
    <div>

      {error && (
        <div className="mb-4 p-4 bg-red-50 border border-red-200 rounded-md">
          <p className="text-red-800">{error}</p>
        </div>
      )}



      <form onSubmit={handleSubmit} className="space-y-6">
        {/* Данные пользователя */}
        <div className="space-y-4">
          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
            Данные пользователя
          </h3>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {/* Имя */}
            <div>
              <label htmlFor="first_name" className="block text-sm font-medium text-gray-700 mb-2">
                Имя *
              </label>
              <input
                type="text"
                id="first_name"
                name="first_name"
                value={formData.first_name}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="Введите ваше имя"
                required
              />
            </div>

            {/* Фамилия */}
            <div>
              <label htmlFor="last_name" className="block text-sm font-medium text-gray-700 mb-2">
                Фамилия *
              </label>
              <input
                type="text"
                id="last_name"
                name="last_name"
                value={formData.last_name}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="Введите вашу фамилию"
                required
              />
            </div>

            {/* Отчество */}
            <div>
              <label htmlFor="middle_name" className="block text-sm font-medium text-gray-700 mb-2">
                Отчество
              </label>
              <input
                type="text"
                id="middle_name"
                name="middle_name"
                value={formData.middle_name}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="Введите ваше отчество (необязательно)"
              />
            </div>

            {/* Телефон */}
            <div>
              <label htmlFor="phone" className="block text-sm font-medium text-gray-700 mb-2">
                Телефон
              </label>
              <input
                type="tel"
                id="phone"
                name="phone"
                value={formData.phone}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="+7 (999) 123-45-67"
              />
            </div>
          </div>
        </div>

        {/* Данные для входа */}
        <div className="space-y-4">
          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
            Данные для входа
          </h3>

          {/* Email */}
          <div>
            <label htmlFor="email" className="block text-sm font-medium text-gray-700 mb-2">
              Email *
            </label>
            <input
              type="email"
              id="email"
              name="email"
              value={formData.email}
              onChange={handleInputChange}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="your.email@company.com"
              required
            />
          </div>

          {/* Пароль */}
          <div>
            <label htmlFor="password" className="block text-sm font-medium text-gray-700 mb-2">
              Пароль *
            </label>
            <input
              type="password"
              id="password"
              name="password"
              value={formData.password}
              onChange={handleInputChange}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="Минимум 6 символов"
              required
            />
          </div>

          {/* Подтверждение пароля */}
          <div>
            <label htmlFor="confirmPassword" className="block text-sm font-medium text-gray-700 mb-2">
              Подтверждение пароля *
            </label>
            <input
              type="password"
              id="confirmPassword"
              name="confirmPassword"
              value={formData.confirmPassword}
              onChange={handleInputChange}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="Повторите пароль"
              required
            />
          </div>
        </div>

        {/* Данные компании */}
        <div className="space-y-4">
          <h3 className="text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2">
            Данные компании
          </h3>

          {/* Название компании */}
          <div>
            <label htmlFor="company_name" className="block text-sm font-medium text-gray-700 mb-2">
              Название компании *
            </label>
            <input
              type="text"
              id="company_name"
              name="company_name"
              value={formData.company_name}
              onChange={handleInputChange}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="Введите название вашей компании"
              required
            />
          </div>

          {/* Контактное лицо */}
          <div>
            <label htmlFor="contact_person" className="block text-sm font-medium text-gray-700 mb-2">
              Контактное лицо *
            </label>
            <input
              type="text"
              id="contact_person"
              name="contact_person"
              value={formData.contact_person}
              onChange={handleInputChange}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="ФИО контактного лица"
              required
            />
          </div>

          {/* Телефон компании */}
          <div>
            <label htmlFor="company_phone" className="block text-sm font-medium text-gray-700 mb-2">
              Телефон компании *
            </label>
            <input
              type="tel"
              id="company_phone"
              name="company_phone"
              value={formData.company_phone}
              onChange={handleInputChange}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="+7 (999) 123-45-67"
              required
            />
          </div>

          {/* Email компании */}
          <div>
            <label htmlFor="company_email" className="block text-sm font-medium text-gray-700 mb-2">
              Email компании *
            </label>
            <input
              type="email"
              id="company_email"
              name="company_email"
              value={formData.company_email}
              onChange={handleInputChange}
              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="info@company.com"
              required
            />
          </div>

        {/* Кнопки */}
        <div className="flex flex-col space-y-4">
          <button
            type="submit"
            disabled={isLoading}
            className="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50"
          >
            {isLoading ? 'Регистрация...' : 'Зарегистрироваться'}
          </button>
        </div>
      </form>
    </div>
  )
}

export default CustomerRegistrationForm
