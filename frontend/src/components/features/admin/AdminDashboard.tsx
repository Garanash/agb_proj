/**
 * –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
 */

import React, { useState, useEffect } from 'react';
import { useAuth } from '@/hooks';
import { getApiEndpoint } from '@/utils';

interface SystemStats {
  totalUsers: number;
  activeUsers: number;
  totalLogins: number;
  systemUptime: string;
  memoryUsage: number;
  cpuUsage: number;
  diskUsage: number;
  apiRequests: number;
  errorRate: number;
  totalDocuments: number;
  totalEvents: number;
  totalNews: number;
}

interface RecentActivity {
  id: string;
  user: string;
  action: string;
  timestamp: string;
  ip: string;
  status: 'success' | 'warning' | 'error';
}

interface QuickAction {
  id: string;
  title: string;
  description: string;
  icon: string;
  href: string;
  color: string;
}

interface DashboardData {
  total_users: number;
  active_users: number;
  total_events: number;
  events_this_month: number;
  total_news: number;
  news_this_month: number;
  role_stats: Record<string, number>;
  login_stats: Record<string, number>;
  recent_users: Array<{
    id: number;
    username: string;
    first_name: string;
    last_name: string;
    role: string;
    created_at: string;
    last_login: string | null;
    is_active: boolean;
  }>;
  system_stats: {
    cpu_usage: number;
    memory_usage: number;
    disk_usage: number;
    uptime: string;
    api_requests_today: number;
    error_rate: number;
  };
  last_updated: string;
}

const AdminDashboard: React.FC = () => {
  const { user, login, isAuthenticated } = useAuth();
  const [stats, setStats] = useState<SystemStats>({
    totalUsers: 0,
    activeUsers: 0,
    totalLogins: 0,
    systemUptime: '0d 0h 0m',
    memoryUsage: 0,
    cpuUsage: 0,
    diskUsage: 0,
    apiRequests: 0,
    errorRate: 0,
    totalDocuments: 0,
    totalEvents: 0,
    totalNews: 0
  });
  const [recentActivity, setRecentActivity] = useState<RecentActivity[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (isAuthenticated && user?.role === 'admin') {
      loadDashboardData();
    } else if (!isAuthenticated) {
      // –ü—ã—Ç–∞–µ–º—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ–π—Ç–∏ –∫–∞–∫ –∞–¥–º–∏–Ω
      autoLoginAsAdmin();
    }
  }, [isAuthenticated, user]);

  const autoLoginAsAdmin = async () => {
    try {
      setIsLoading(true);
      setError(null);
      
      const success = await login('admin', 'admin123');
      if (success) {
        // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞, loadDashboardData –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω —á–µ—Ä–µ–∑ useEffect
        console.log('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      } else {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—Ö–æ–¥–∞:', error);
      setError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—Ö–æ–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
      setIsLoading(false);
    }
  };

  const loadDashboardData = async () => {
    try {
      setIsLoading(true);
      setError(null);
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage
      const token = localStorage.getItem('access_token');
      
      if (!token) {
        throw new Error('–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }

      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∞—à–±–æ—Ä–¥–∞
      const statsResponse = await fetch(getApiEndpoint('/admin/dashboard/stats'), {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });

      if (!statsResponse.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ${statsResponse.status}`);
      }

      const statsData: DashboardData = await statsResponse.json();

      // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
      const activityResponse = await fetch(getApiEndpoint('/admin/dashboard/activity?limit=5'), {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });

      if (!activityResponse.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${activityResponse.status}`);
      }

      const activityData: RecentActivity[] = await activityResponse.json();

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      setStats({
        totalUsers: statsData.total_users,
        activeUsers: statsData.active_users,
        totalLogins: statsData.login_stats ? Object.values(statsData.login_stats).reduce((sum, count) => sum + count, 0) : 0,
        systemUptime: statsData.system_stats.uptime,
        memoryUsage: statsData.system_stats.memory_usage,
        cpuUsage: statsData.system_stats.cpu_usage,
        diskUsage: statsData.system_stats.disk_usage,
        apiRequests: statsData.system_stats.api_requests_today,
        errorRate: statsData.system_stats.error_rate,
        totalDocuments: statsData.total_events, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–±—ã—Ç–∏—è –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ã
        totalEvents: statsData.events_this_month,
        totalNews: statsData.total_news
      });

      setRecentActivity(activityData);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞:', error);
      setError(error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      
      // Fallback –∫ –º–æ–∫–æ–≤—ã–º –¥–∞–Ω–Ω—ã–º –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      setStats({
        totalUsers: 156,
        activeUsers: 23,
        totalLogins: 1247,
        systemUptime: '15d 8h 32m',
        memoryUsage: 68,
        cpuUsage: 23,
        diskUsage: 45,
        apiRequests: 8942,
        errorRate: 0.3,
        totalDocuments: 342,
        totalEvents: 28,
        totalNews: 15
      });

      setRecentActivity([
        {
          id: '1',
          user: 'admin',
          action: '–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É',
          timestamp: '2025-09-27 19:45:23',
          ip: '192.168.1.100',
          status: 'success'
        },
        {
          id: '2',
          user: 'user123',
          action: '–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞',
          timestamp: '2025-09-27 19:44:12',
          ip: '192.168.1.101',
          status: 'success'
        },
        {
          id: '3',
          user: 'manager',
          action: '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
          timestamp: '2025-09-27 19:43:45',
          ip: '192.168.1.102',
          status: 'error'
        }
      ]);
    } finally {
      setIsLoading(false);
    }
  };

  const quickActions: QuickAction[] = [
    {
      id: 'users',
      title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏',
      description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      icon: 'üë•',
      href: '/admin/users',
      color: 'bg-blue-500'
    },
    {
      id: 'settings',
      title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã',
      description: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
      icon: '‚öôÔ∏è',
      href: '/admin/settings',
      color: 'bg-gray-500'
    },
    {
      id: 'logs',
      title: '–°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏',
      description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∏ —Å–æ–±—ã—Ç–∏–π',
      icon: 'üìã',
      href: '/admin/logs',
      color: 'bg-green-500'
    },
    {
      id: 'backup',
      title: '–†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏',
      description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—ç–∫–∞–ø–∞–º–∏',
      icon: 'üíæ',
      href: '/admin/backup',
      color: 'bg-purple-500'
    },
    {
      id: 'v3',
      title: '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å v3',
      description: '–ù–æ–≤–∞—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å',
      icon: 'üöÄ',
      href: '/admin/v3',
      color: 'bg-indigo-500'
    },
    {
      id: 'analytics',
      title: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
      description: '–û—Ç—á–µ—Ç—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
      icon: 'üìä',
      href: '/admin/analytics',
      color: 'bg-orange-500'
    }
  ];

  if (isLoading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-700 rounded-lg p-6">
        <div className="flex items-center">
          <div className="w-3 h-3 bg-red-500 rounded-full mr-3"></div>
          <div>
            <h4 className="text-red-800 dark:text-red-200 font-medium">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</h4>
            <p className="text-red-600 dark:text-red-300 text-sm mt-1">{error}</p>
            <button 
              onClick={loadDashboardData}
              className="mt-2 text-sm text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-200 underline"
            >
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
      <div className="bg-gradient-to-r from-blue-600 to-indigo-600 rounded-lg p-6 text-white">
        <h1 className="text-2xl font-bold mb-2">
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user?.username || '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'}! üëã
        </h1>
        <p className="text-blue-100">
          –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π –ê–ª–º–∞–∑–≥–µ–æ–±—É—Ä Platform
        </p>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div className="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700">
          <div className="flex items-center">
            <div className="p-2 bg-blue-100 dark:bg-blue-900/20 rounded-lg">
              <span className="text-2xl">üë•</span>
            </div>
            <div className="ml-4">
              <p className="text-sm text-gray-600 dark:text-gray-400">–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
              <p className="text-2xl font-bold text-gray-900 dark:text-gray-100">{stats.totalUsers}</p>
            </div>
          </div>
        </div>

        <div className="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700">
          <div className="flex items-center">
            <div className="p-2 bg-green-100 dark:bg-green-900/20 rounded-lg">
              <span className="text-2xl">‚úÖ</span>
            </div>
            <div className="ml-4">
              <p className="text-sm text-gray-600 dark:text-gray-400">–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</p>
              <p className="text-2xl font-bold text-gray-900 dark:text-gray-100">{stats.activeUsers}</p>
            </div>
          </div>
        </div>

        <div className="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700">
          <div className="flex items-center">
            <div className="p-2 bg-purple-100 dark:bg-purple-900/20 rounded-lg">
              <span className="text-2xl">üìÑ</span>
            </div>
            <div className="ml-4">
              <p className="text-sm text-gray-600 dark:text-gray-400">–î–æ–∫—É–º–µ–Ω—Ç—ã</p>
              <p className="text-2xl font-bold text-gray-900 dark:text-gray-100">{stats.totalDocuments}</p>
            </div>
          </div>
        </div>

        <div className="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700">
          <div className="flex items-center">
            <div className="p-2 bg-orange-100 dark:bg-orange-900/20 rounded-lg">
              <span className="text-2xl">üì∞</span>
            </div>
            <div className="ml-4">
              <p className="text-sm text-gray-600 dark:text-gray-400">–ù–æ–≤–æ—Å—Ç–∏</p>
              <p className="text-2xl font-bold text-gray-900 dark:text-gray-100">{stats.totalNews}</p>
            </div>
          </div>
        </div>
      </div>

      {/* –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700">
          <h3 className="text-lg font-semibold text-gray-800 dark:text-gray-100 mb-4">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã</h3>
          <div className="space-y-4">
            <div>
              <div className="flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-1">
                <span>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏</span>
                <span>{stats.memoryUsage}%</span>
              </div>
              <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2">
                <div 
                  className="bg-blue-600 h-2 rounded-full transition-all duration-300" 
                  style={{ width: `${stats.memoryUsage}%` }}
                ></div>
              </div>
            </div>
            <div>
              <div className="flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-1">
                <span>–ó–∞–≥—Ä—É–∑–∫–∞ CPU</span>
                <span>{stats.cpuUsage}%</span>
              </div>
              <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2">
                <div 
                  className="bg-green-600 h-2 rounded-full transition-all duration-300" 
                  style={{ width: `${stats.cpuUsage}%` }}
                ></div>
              </div>
            </div>
            <div>
              <div className="flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-1">
                <span>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞</span>
                <span>{stats.diskUsage}%</span>
              </div>
              <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2">
                <div 
                  className="bg-yellow-600 h-2 rounded-full transition-all duration-300" 
                  style={{ width: `${stats.diskUsage}%` }}
                ></div>
              </div>
            </div>
          </div>
        </div>

        <div className="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700">
          <h3 className="text-lg font-semibold text-gray-800 dark:text-gray-100 mb-4">API –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
          <div className="space-y-4">
            <div className="flex justify-between">
              <span className="text-gray-600 dark:text-gray-400">–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤</span>
              <span className="font-semibold text-gray-900 dark:text-gray-100">{stats.apiRequests.toLocaleString()}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600 dark:text-gray-400">–û—à–∏–±–∫–∏</span>
              <span className="font-semibold text-red-600">{stats.errorRate}%</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600 dark:text-gray-400">–£—Å–ø–µ—à–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã</span>
              <span className="font-semibold text-green-600">{100 - stats.errorRate}%</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600 dark:text-gray-400">–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã</span>
              <span className="font-semibold text-gray-900 dark:text-gray-100">{stats.systemUptime}</span>
            </div>
          </div>
        </div>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700">
        <h3 className="text-lg font-semibold text-gray-800 dark:text-gray-100 mb-4">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {quickActions.map((action) => (
            <a
              key={action.id}
              href={action.href}
              className="p-4 rounded-lg border border-gray-200 dark:border-gray-600 hover:shadow-md transition-shadow duration-200 group"
            >
              <div className="flex items-center space-x-3">
                <div className={`p-2 rounded-lg ${action.color} text-white`}>
                  <span className="text-xl">{action.icon}</span>
                </div>
                <div>
                  <h4 className="font-medium text-gray-900 dark:text-gray-100 group-hover:text-blue-600">
                    {action.title}
                  </h4>
                  <p className="text-sm text-gray-600 dark:text-gray-400">
                    {action.description}
                  </p>
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>

      {/* –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
      <div className="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-lg font-semibold text-gray-800 dark:text-gray-100">–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
          <button 
            onClick={loadDashboardData}
            className="text-sm text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300"
          >
            –û–±–Ω–æ–≤–∏—Ç—å
          </button>
        </div>
        <div className="space-y-3">
          {recentActivity.map((activity) => (
            <div key={activity.id} className="flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg">
              <div className="flex items-center space-x-3">
                <div className={`w-2 h-2 rounded-full ${
                  activity.status === 'success' ? 'bg-green-500' :
                  activity.status === 'warning' ? 'bg-yellow-500' : 'bg-red-500'
                }`}></div>
                <div>
                  <p className="text-sm font-medium text-gray-900 dark:text-gray-100">{activity.user}</p>
                  <p className="text-xs text-gray-600 dark:text-gray-400">{activity.action}</p>
                </div>
              </div>
              <div className="text-right">
                <p className="text-xs text-gray-500 dark:text-gray-400">{activity.timestamp}</p>
                <p className="text-xs text-gray-500 dark:text-gray-400">{activity.ip}</p>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã */}
      <div className="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-700 rounded-lg p-4">
        <div className="flex items-center">
          <div className="w-3 h-3 bg-green-500 rounded-full mr-3"></div>
          <div>
            <h4 className="text-green-800 dark:text-green-200 font-medium">–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ</h4>
            <p className="text-green-600 dark:text-green-300 text-sm">
              –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ. –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {stats.systemUptime}
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AdminDashboard;
