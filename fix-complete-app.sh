#!/bin/bash

echo "üöÄ AGB Project - –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "============================================="

# –ü–æ–ª—É—á–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP=$(curl -s ifconfig.me || curl -s ipinfo.io/ip || echo "89.23.99.86")
echo "üåê IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"

echo ""
echo "=== 1. –û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–û–î–ê ==="
echo "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
git reset --hard HEAD
git clean -fd
git fetch origin
git reset --hard origin/master

echo ""
echo "=== 2. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–ê–ù–ù–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ==="
echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin..."
docker exec agb_postgres_prod psql -U felix_prod_user -d agb_felix_prod -c "UPDATE users SET first_name = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', last_name = '–°–∏—Å—Ç–µ–º—ã' WHERE username = 'admin';"

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:"
docker exec agb_postgres_prod psql -U felix_prod_user -d agb_felix_prod -c "SELECT id, username, email, first_name, last_name FROM users WHERE username = 'admin';"

echo ""
echo "=== 3. –ú–ê–°–°–û–í–ê–Ø –ó–ê–ú–ï–ù–ê getApiUrl ==="
echo "–ó–∞–º–µ–Ω–∞ –≤—Å–µ—Ö getApiUrl –Ω–∞ getSimpleApiUrl..."
find frontend -name "*.tsx" -o -name "*.ts" | xargs sed -i 's/import { getApiUrl }/import { getSimpleApiUrl }/g'
find frontend -name "*.tsx" -o -name "*.ts" | xargs sed -i 's/import { getApiUrl, /import { getSimpleApiUrl, /g'
find frontend -name "*.tsx" -o -name "*.ts" | xargs sed -i 's/, getApiUrl }/, getSimpleApiUrl }/g'
find frontend -name "*.tsx" -o -name "*.ts" | xargs sed -i 's/getApiUrl()/getSimpleApiUrl()/g'

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:"
echo "–û—Å—Ç–∞–ª–æ—Å—å —Ñ–∞–π–ª–æ–≤ —Å getApiUrl:"
find frontend -name "*.tsx" -o -name "*.ts" | xargs grep -l "getApiUrl" | wc -l

echo ""
echo "=== 4. –ü–ï–†–ï–°–ë–û–†–ö–ê FRONTEND ==="
echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ frontend..."
docker stop agb_frontend_prod 2>/dev/null || echo "Frontend —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

echo "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –æ–±—Ä–∞–∑–∞ frontend..."
docker rmi docker-frontend 2>/dev/null || echo "–û–±—Ä–∞–∑ —É–∂–µ —É–¥–∞–ª–µ–Ω"

echo "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ frontend —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏..."
docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env build --no-cache frontend

echo "–ó–∞–ø—É—Å–∫ frontend..."
docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env up -d frontend

echo ""
echo "=== 5. –ü–ï–†–ï–ó–ê–ü–£–°–ö NGINX ==="
docker restart agb_nginx_prod
sleep 10

echo ""
echo "=== 6. –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê ==="
echo "–°—Ç–∞—Ç—É—Å frontend:"
docker ps | grep frontend

echo ""
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ frontend:"
curl -s http://$SERVER_IP | head -1

echo ""
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ backend API:"
curl -s http://$SERVER_IP:8000/api/health | head -1

echo ""
echo "–¢–µ—Å—Ç –≤—Ö–æ–¥–∞:"
curl -X POST http://$SERVER_IP:8000/api/v1/auth/login \
  -H "Content-Type: application/json" \
  -H "Origin: http://$SERVER_IP" \
  -d '{"username": "admin", "password": "admin123"}' \
  -s | head -1

echo ""
echo "=== 7. –°–¢–ê–¢–£–° –í–°–ï–• –ö–û–ù–¢–ï–ô–ù–ï–†–û–í ==="
docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env ps

echo ""
echo "üéâ –ì–û–¢–û–í–û!"
echo "==========="
echo "üåê Frontend: http://$SERVER_IP"
echo "üîß Backend API: http://$SERVER_IP:8000"
echo "üìö Swagger UI: http://$SERVER_IP:8000/docs"
echo "‚ù§Ô∏è Health Check: http://$SERVER_IP:8000/api/health"
echo ""
echo "üë§ –õ–æ–≥–∏–Ω: admin"
echo "üîë –ü–∞—Ä–æ–ª—å: admin123"
echo ""
echo "–¢–µ–ø–µ—Ä—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞—Ç—å!"
echo "- ‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
echo "- ‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç getSimpleApiUrl()"
echo "- ‚úÖ –ú–µ–Ω—é –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è"
echo "- ‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
