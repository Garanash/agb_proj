#!/bin/bash

# üöÄ AGB Project - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0

set -e

echo "üöÄ AGB Project - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫"
echo "==============================="

# –ü–æ–ª—É—á–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP=$(curl -s -4 ifconfig.me || curl -s -4 ipinfo.io/ip || curl -s -4 icanhazip.com || echo "localhost")
echo "üåê IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"

# –°–æ–∑–¥–∞–µ–º production.env –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f "config/env/production.env" ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    DB_PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-25)
    SECRET_KEY=$(openssl rand -base64 64 | tr -d "=+/" | cut -c1-50)
    ADMIN_PASSWORD=$(openssl rand -base64 16 | tr -d "=+/" | cut -c1-12)
    
    mkdir -p config/env scripts/setup
    
    cat > config/env/production.env << EOF
POSTGRES_DB=agb_felix_prod
POSTGRES_USER=felix_prod_user
POSTGRES_PASSWORD=$DB_PASSWORD
DATABASE_URL=postgresql://felix_prod_user:$DB_PASSWORD@postgres:5432/agb_felix_prod
SECRET_KEY=$SECRET_KEY
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=1440
ADMIN_USERNAME=admin
ADMIN_PASSWORD=$ADMIN_PASSWORD
ADMIN_EMAIL=admin@$SERVER_IP
ADMIN_FIRST_NAME=–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
ADMIN_LAST_NAME=–°–∏—Å—Ç–µ–º—ã
NEXT_PUBLIC_API_URL=http://$SERVER_IP/api
NGINX_PORT=80
NGINX_SSL_PORT=443
REDIS_URL=redis://redis:6379/0
LOG_LEVEL=INFO
LOG_FILE=backend.log
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=xlsx,xls,pdf,doc,docx,txt,jpg,jpeg,png
ENABLE_METRICS=true
METRICS_PORT=9090
EOF
    
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"
    echo "üîë –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞: $ADMIN_PASSWORD"
fi

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î
if [ ! -f "scripts/setup/init-production-db.sh" ]; then
    cat > scripts/setup/init-production-db.sh << 'EOF'
#!/bin/bash
set -e
psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE EXTENSION IF NOT EXISTS "pg_trgm";
    GRANT ALL PRIVILEGES ON DATABASE $POSTGRES_DB TO $POSTGRES_USER;
    GRANT ALL ON SCHEMA public TO $POSTGRES_USER;
    GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO $POSTGRES_USER;
    GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO $POSTGRES_USER;
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO $POSTGRES_USER;
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO $POSTGRES_USER;
EOSQL
EOF
    chmod +x scripts/setup/init-production-db.sh
fi

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env down -v 2>/dev/null || true

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å Docker..."
# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
docker stop agb_nginx_prod agb_frontend_prod agb_backend_prod agb_postgres_prod agb_redis_prod 2>/dev/null || true
# –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
docker rm agb_nginx_prod agb_frontend_prod agb_backend_prod agb_postgres_prod agb_redis_prod 2>/dev/null || true
# –£–¥–∞–ª—è–µ–º —Å–µ—Ç—å
docker network rm docker_app-network 2>/dev/null || true
# –£–¥–∞–ª—è–µ–º volumes
docker volume rm docker_postgres_data docker_redis_data docker_uploads_data 2>/dev/null || true

echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env up -d

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (3 –º–∏–Ω—É—Ç—ã)..."
sleep 180

echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env ps

echo ""
echo "üéâ –ì–æ—Ç–æ–≤–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "‚Ä¢ Frontend: http://localhost"
echo "‚Ä¢ Backend API: http://localhost:8000"
echo "‚Ä¢ Swagger UI: http://localhost:8000/docs"
echo "‚Ä¢ Health Check: http://localhost/api/health"
echo ""
echo "üë§ –õ–æ–≥–∏–Ω: admin"
echo "üîë –ü–∞—Ä–æ–ª—å: $(grep ADMIN_PASSWORD config/env/production.env | cut -d'=' -f2)"
echo ""
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env down"
