#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —á–∞—Ç–æ–≤
"""

import asyncio
import sys
import os
import requests
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend –≤ sys.path
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

async def check_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        from database import get_db
        
        print("üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        async for db in get_db():
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã —á–∞—Ç–æ–≤
                tables = [
                    'chat_rooms', 'chat_room_participants', 'chat_messages',
                    'chat_bots', 'chat_folders', 'chat_room_folders'
                ]
                
                for table in tables:
                    try:
                        result = await db.execute(f"SELECT COUNT(*) FROM {table}")
                        count = result.scalar()
                        print(f"  ‚úÖ {table}: {count} –∑–∞–ø–∏—Å–µ–π")
                    except Exception as e:
                        print(f"  ‚ùå {table}: –û—à–∏–±–∫–∞ - {e}")
                
                await db.close()
                break
                
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ë–î: {e}")
                return False
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î: {e}")
        return False

def check_backend():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ backend API"""
    try:
        print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ backend API...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å backend
        response = requests.get('http://localhost:8000/docs', timeout=5)
        if response.status_code == 200:
            print("  ‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"  ‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"  ‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False

def check_frontend():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ frontend"""
    try:
        print("üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å frontend
        response = requests.get('http://localhost:3000', timeout=5)
        if response.status_code == 200:
            print("  ‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"  ‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"  ‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False

def check_api_endpoints():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ API endpoints"""
    try:
        print("üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º health check (–µ—Å–ª–∏ –µ—Å—Ç—å)
        try:
            response = requests.get('http://localhost:8000/health', timeout=5)
            if response.status_code == 200:
                print("  ‚úÖ Health check: OK")
            else:
                print(f"  ‚ö†Ô∏è Health check: {response.status_code}")
        except:
            print("  ‚ö†Ô∏è Health check: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é API
        response = requests.get('http://localhost:8000/docs', timeout=5)
        if response.status_code == 200:
            print("  ‚úÖ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: –¥–æ—Å—Ç—É–ø–Ω–∞")
        else:
            print(f"  ‚ùå API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —á–∞—Ç–æ–≤")
    print("=" * 50)
    print(f"–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã
    db_ok = asyncio.run(check_database())
    backend_ok = check_backend()
    frontend_ok = check_frontend()
    api_ok = check_api_endpoints()
    
    print()
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print("=" * 50)
    
    status = {
        "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö": "‚úÖ OK" if db_ok else "‚ùå –û–®–ò–ë–ö–ê",
        "Backend API": "‚úÖ OK" if backend_ok else "‚ùå –û–®–ò–ë–ö–ê", 
        "Frontend": "‚úÖ OK" if frontend_ok else "‚ùå –û–®–ò–ë–ö–ê",
        "API endpoints": "‚úÖ OK" if api_ok else "‚ùå –û–®–ò–ë–ö–ê"
    }
    
    for component, status_text in status.items():
        print(f"{component:15} {status_text}")
    
    print()
    
    # –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å
    all_ok = all([db_ok, backend_ok, frontend_ok, api_ok])
    
    if all_ok:
        print("üéâ –°–∏—Å—Ç–µ–º–∞ —á–∞—Ç–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞!")
        print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000/chat")
        print("2. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç")
        print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å")
    else:
        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å–∏—Å—Ç–µ–º–µ")
        print("\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é:")
        
        if not db_ok:
            print("- –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç: backend/migrations/create_chat_tables.sql")
            print("- –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python backend/init_chat_db.py")
        
        if not backend_ok:
            print("- –ó–∞–ø—É—Å—Ç–∏—Ç–µ backend: cd backend && uvicorn main:app --reload")
            print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ backend/database.py")
        
        if not frontend_ok:
            print("- –ó–∞–ø—É—Å—Ç–∏—Ç–µ frontend: cd frontend && npm run dev")
            print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        print("\nüìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: SETUP_CHAT_SYSTEM.md")
    
    print()
    print("=" * 50)

if __name__ == "__main__":
    main()
