#!/bin/bash
# –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –ª–æ–≥–∏–Ω–æ–º

echo "üîç –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –õ–û–ì–ò–ù–û–ú"
echo "========================================"

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "\nüìã 1. –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

# 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ backend
echo -e "\nüìã 2. –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ backend:"
docker logs --tail 10 agb_backend

# 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ nginx
echo -e "\nüìã 3. –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ nginx:"
docker logs --tail 10 agb_nginx

# 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å backend –∏–∑ nginx
echo -e "\nüìã 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å backend –∏–∑ nginx:"
docker exec agb_nginx curl -s http://backend:8000/api/health

# 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ backend
echo -e "\nüìã 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ backend:"
curl -s http://localhost:8000/api/health

# 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ nginx
echo -e "\nüìã 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ nginx:"
curl -s http://localhost/api/health

# 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω —á–µ—Ä–µ–∑ backend –Ω–∞–ø—Ä—è–º—É—é
echo -e "\nüìã 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω —á–µ—Ä–µ–∑ backend –Ω–∞–ø—Ä—è–º—É—é:"
curl -s -X POST http://localhost:8000/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{"username": "admin", "password": "admin123"}' | jq .

# 8. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω —á–µ—Ä–µ–∑ nginx
echo -e "\nüìã 8. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω —á–µ—Ä–µ–∑ nginx:"
curl -s -X POST http://localhost/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{"username": "admin", "password": "admin123"}' | jq .

# 9. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ
echo -e "\nüìã 9. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:"
docker exec agb_postgres psql -U felix_user -d agb_felix -c "
SELECT id, username, email, is_active, role,
       CASE WHEN hashed_password IS NOT NULL THEN 'HAS_HASH' ELSE 'NO_HASH' END as password_status
FROM users WHERE username = 'admin';"

# 10. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
echo -e "\nüìã 10. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
docker network ls
docker network inspect agb_proj_app-network | grep -A 10 "Containers"

echo -e "\n‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo -e "\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:"
echo "   - Nginx –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ backend"
echo "   - –ü—Ä–æ–±–ª–µ–º–∞ —Å CORS"
echo "   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
echo "   - –ü—Ä–æ–±–ª–µ–º–∞ —Å JWT —Ç–æ–∫–µ–Ω–∞–º–∏"
echo -e "\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
echo "   - –ï—Å–ª–∏ backend –Ω–∞–ø—Ä—è–º—É—é —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —á–µ—Ä–µ–∑ nginx –Ω–µ—Ç - –ø—Ä–æ–±–ª–µ–º–∞ –≤ nginx"
echo "   - –ï—Å–ª–∏ backend –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ backend'–∞"
echo "   - –ï—Å–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π - –ø–µ—Ä–µ—Å–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∞"
