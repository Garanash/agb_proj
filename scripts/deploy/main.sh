#!/bin/bash
set -e

# üöÄ AGB Project - –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
# –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–º–æ—â–∏
show_help() {
    cat << EOF
üöÄ AGB Project - –°–∏—Å—Ç–µ–º–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê] [–û–ü–¶–ò–ò]

–ö–û–ú–ê–ù–î–´:
    dev         –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    prod        Production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
    test        –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
    stop        –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    restart     –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    status      –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
    logs        –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
    cleanup     –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤
    health      –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã

–û–ü–¶–ò–ò:
    --fresh     –°–≤–µ–∂–µ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ (—Å –æ—á–∏—Å—Ç–∫–æ–π)
    --no-cache  –°–±–æ—Ä–∫–∞ –±–µ–∑ –∫—ç—à–∞
    --verbose   –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥
    --help      –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü–†–ò–ú–ï–†–´:
    $0 dev --fresh          # –°–≤–µ–∂–µ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    $0 prod --no-cache      # Production –±–µ–∑ –∫—ç—à–∞
    $0 test                 # –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
    $0 status               # –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
    $0 logs frontend        # –õ–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞

EOF
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    fi
    
    log "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
check_config() {
    local env_file="config/env/.env"
    
    if [ ! -f "$env_file" ]; then
        warn "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
        if [ -f "config/env/production.env.example" ]; then
            cp config/env/production.env.example "$env_file"
            log "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
        else
            error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω –∏ –Ω–µ—Ç –ø—Ä–∏–º–µ—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è"
        fi
    fi
    
    log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    mkdir -p data/uploads/{documents,portfolio,profiles}
    mkdir -p infrastructure/ssl
    mkdir -p logs
    
    log "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤
cleanup_docker() {
    log "–û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose -f config/docker/docker-compose.yml down 2>/dev/null || true
    docker-compose -f config/docker/docker-compose.prod.yml down 2>/dev/null || true
    
    # –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã
    docker system prune -f
    docker volume prune -f
    
    log "‚úÖ Docker —Ä–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã"
}

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
deploy_dev() {
    log "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
    
    check_dependencies
    check_config
    create_directories
    
    if [ "$1" = "--fresh" ]; then
        cleanup_docker
    fi
    
    docker-compose -f config/docker/docker-compose.yml up -d --build
    
    log "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    log "üåê Frontend: http://localhost:3000"
    log "üåê Backend: http://localhost:8000"
    log "üåê API Docs: http://localhost:8000/docs"
}

# Production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
deploy_prod() {
    log "üè≠ Production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ..."
    
    check_dependencies
    check_config
    create_directories
    
    if [ "$1" = "--fresh" ]; then
        cleanup_docker
    fi
    
    docker-compose -f config/docker/docker-compose.prod.yml up -d --build
    
    log "‚úÖ Production —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    log "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost"
}

# –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
deploy_test() {
    log "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ..."
    
    check_dependencies
    check_config
    create_directories
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    docker-compose -f config/docker/docker-compose.prod.yml up -d --build
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    ./scripts/setup/test-deployment.sh
    
    log "‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
stop_services() {
    log "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    docker-compose -f config/docker/docker-compose.yml down 2>/dev/null || true
    docker-compose -f config/docker/docker-compose.prod.yml down 2>/dev/null || true
    
    log "‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
show_status() {
    log "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    
    echo ""
    echo "=== Docker Compose Services ==="
    docker-compose -f config/docker/docker-compose.yml ps 2>/dev/null || echo "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    
    echo ""
    echo "=== Production Services ==="
    docker-compose -f config/docker/docker-compose.prod.yml ps 2>/dev/null || echo "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö production —Å–µ—Ä–≤–∏—Å–æ–≤"
    
    echo ""
    echo "=== Docker System ==="
    docker system df
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
show_logs() {
    local service=${1:-""}
    
    if [ -n "$service" ]; then
        log "üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞: $service"
        docker-compose -f config/docker/docker-compose.yml logs -f "$service" 2>/dev/null || \
        docker-compose -f config/docker/docker-compose.prod.yml logs -f "$service" 2>/dev/null || \
        error "–°–µ—Ä–≤–∏—Å '$service' –Ω–µ –Ω–∞–π–¥–µ–Ω"
    else
        log "üìã –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
        docker-compose -f config/docker/docker-compose.yml logs -f 2>/dev/null || \
        docker-compose -f config/docker/docker-compose.prod.yml logs -f 2>/dev/null || \
        error "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
check_health() {
    log "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
    if ! docker info &> /dev/null; then
        error "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å—ã
    local services=("frontend" "backend" "postgres" "nginx")
    for service in "${services[@]}"; do
        if docker ps --format "table {{.Names}}" | grep -q "$service"; then
            log "‚úÖ $service: –∑–∞–ø—É—â–µ–Ω"
        else
            warn "‚ùå $service: –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
    done
    
    log "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local command=${1:-"help"}
    local option=${2:-""}
    
    case $command in
        "dev")
            deploy_dev "$option"
            ;;
        "prod")
            deploy_prod "$option"
            ;;
        "test")
            deploy_test "$option"
            ;;
        "stop")
            stop_services
            ;;
        "restart")
            stop_services
            sleep 2
            deploy_dev "$option"
            ;;
        "status")
            show_status
            ;;
        "logs")
            show_logs "$option"
            ;;
        "cleanup")
            cleanup_docker
            ;;
        "health")
            check_health
            ;;
        "help"|"--help"|"-h")
            show_help
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $command. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏."
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main "$@"
