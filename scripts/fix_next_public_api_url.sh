#!/bin/sh
set -e

# –ê–≤—Ç–æ-—Ñ–∏–∫—Å –ø—Ä–æ–±–ª–µ–º —Å NEXT_PUBLIC_API_URL –∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   ./scripts/fix_next_public_api_url.sh [BASE_URL]
# –ü—Ä–∏–º–µ—Ä—ã:
#   ./scripts/fix_next_public_api_url.sh http://89.23.99.86
#   ./scripts/fix_next_public_api_url.sh https://portal.company.ru

APP_DIR="/root/agb_proj"
ENV_FILE="$APP_DIR/config/env/production.env"
COMPOSE_FILE="$APP_DIR/config/docker/docker-compose.prod.yml"

# 1) –û–ø—Ä–µ–¥–µ–ª—è–µ–º BASE_URL
BASE_URL="$1"

# –ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–ª–∏ ‚Äî –ø–æ–ø—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ –ø—É–±–ª–∏—á–Ω–æ–º—É IP
if [ -z "$BASE_URL" ]; then
  if command -v curl >/dev/null 2>&1; then
    IP=$(curl -s ifconfig.me || true)
    if [ -n "$IP" ]; then
      BASE_URL="http://$IP"
    fi
  fi
fi

if [ -z "$BASE_URL" ]; then
  echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å BASE_URL. –£–∫–∞–∂–∏—Ç–µ –≤—Ä—É—á–Ω—É—é:"
  echo "   ./scripts/fix_next_public_api_url.sh http://89.23.99.86"
  exit 1
fi

echo "=== üõ† –§–ò–ö–° NEXT_PUBLIC_API_URL ==="
echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º BASE_URL: $BASE_URL"

# 2) –û–±–Ω–æ–≤–ª—è–µ–º production.env
echo "–û–±–Ω–æ–≤–ª—è—é $ENV_FILE ..."
if [ ! -f "$ENV_FILE" ]; then
  echo "‚ùå –§–∞–π–ª $ENV_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω"
  exit 1
fi

# –û–±–Ω–æ–≤–∏—Ç—å/–¥–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É NEXT_PUBLIC_API_URL
if grep -q '^NEXT_PUBLIC_API_URL=' "$ENV_FILE"; then
  sed -i "s|^NEXT_PUBLIC_API_URL=.*|NEXT_PUBLIC_API_URL=$BASE_URL|" "$ENV_FILE"
else
  echo "NEXT_PUBLIC_API_URL=$BASE_URL" >> "$ENV_FILE"
fi

echo "–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:" && grep '^NEXT_PUBLIC_API_URL=' "$ENV_FILE" || true

# 3) –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Å –Ω–æ–≤—ã–º env –∏ –∑–∞–ø—É—Å–∫
echo "–ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞—é frontend —Å --no-cache ..."
docker-compose -f "$COMPOSE_FILE" --env-file "$ENV_FILE" build --no-cache frontend

echo "–ó–∞–ø—É—Å–∫–∞—é frontend ..."
docker-compose -f "$COMPOSE_FILE" --env-file "$ENV_FILE" up -d frontend

# 4) –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏–º nginx (–Ω–∞ —Å–ª—É—á–∞–π –∫–µ—à–∞)
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ nginx ..."
docker-compose -f "$COMPOSE_FILE" --env-file "$ENV_FILE" restart nginx || true

# 5) –ü—Ä–æ–≤–µ—Ä–∫–∏
echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∏ ==="
echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ frontend-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
docker exec agb_frontend_prod env | grep NEXT_PUBLIC_API_URL || true

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ root —Å—Ç—Ä–∞–Ω–∏—Ü—ã frontend (–ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤):"
curl -s http://localhost:3000 | head -c 100 || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç frontend –Ω–∞ 3000"
echo

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ health backend:"
curl -s http://localhost:8000/api/health || echo "‚ö†Ô∏è Backend health –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
echo

echo "–ì–æ—Ç–æ–≤–æ. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ c –æ—á–∏—Å—Ç–∫–æ–π –∫—ç—à–∞ (Cmd/Ctrl+Shift+R)."


