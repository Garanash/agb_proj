#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–∞ "–û –Ω–∞—Å"
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend –≤ PYTHONPATH
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'backend'))

from database import AsyncSessionLocal
from models import CompanyEmployee, Department
from sqlalchemy import text

async def create_about_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ '–û –Ω–∞—Å'"""
    print("üè¢ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–∞ '–û –Ω–∞—Å'...")
    
    try:
        async with AsyncSessionLocal() as db:
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–¥–µ–ª—ã
            result = await db.execute(text("SELECT id, name FROM departments WHERE is_active = true"))
            departments = result.fetchall()
            dept_map = {dept[1]: dept[0] for dept in departments}
            
            # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏
            employees = [
                {
                    "first_name": "–í–ª–∞–¥–∏–º–∏—Ä",
                    "last_name": "–ò–≤–∞–Ω–æ–≤",
                    "middle_name": "–ü–µ—Ç—Ä–æ–≤–∏—á",
                    "position": "–ì–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä",
                    "department": "–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂",
                    "email": "director@almazgeobur.ru",
                    "phone": "+7 (495) 123-45-67",
                    "sort_order": 1
                },
                {
                    "first_name": "–ê–Ω–Ω–∞",
                    "last_name": "–°–º–∏—Ä–Ω–æ–≤–∞",
                    "middle_name": "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞",
                    "position": "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –≥–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–≥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞",
                    "department": "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–¥–µ–ª",
                    "email": "deputy@almazgeobur.ru",
                    "phone": "+7 (495) 123-45-68",
                    "sort_order": 2
                },
                {
                    "first_name": "–ú–∏—Ö–∞–∏–ª",
                    "last_name": "–ö–æ–∑–ª–æ–≤",
                    "middle_name": "–°–µ—Ä–≥–µ–µ–≤–∏—á",
                    "position": "–ì–ª–∞–≤–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä",
                    "department": "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª",
                    "email": "chief_engineer@almazgeobur.ru",
                    "phone": "+7 (495) 123-45-69",
                    "sort_order": 3
                },
                {
                    "first_name": "–ï–ª–µ–Ω–∞",
                    "last_name": "–ü–µ—Ç—Ä–æ–≤–∞",
                    "middle_name": "–í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞",
                    "position": "–ù–∞—á–∞–ª—å–Ω–∏–∫ –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥–∞–∂",
                    "department": "–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂",
                    "email": "sales_head@almazgeobur.ru",
                    "phone": "+7 (495) 123-45-70",
                    "sort_order": 4
                },
                {
                    "first_name": "–î–º–∏—Ç—Ä–∏–π",
                    "last_name": "–°–æ–∫–æ–ª–æ–≤",
                    "middle_name": "–ò–≥–æ—Ä–µ–≤–∏—á",
                    "position": "–ù–∞—á–∞–ª—å–Ω–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞",
                    "department": "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–¥–µ–ª",
                    "email": "production_head@almazgeobur.ru",
                    "phone": "+7 (495) 123-45-71",
                    "sort_order": 5
                },
                {
                    "first_name": "–¢–∞—Ç—å—è–Ω–∞",
                    "last_name": "–ú–æ—Ä–æ–∑–æ–≤–∞",
                    "middle_name": "–ê–Ω–¥—Ä–µ–µ–≤–Ω–∞",
                    "position": "–ù–∞—á–∞–ª—å–Ω–∏–∫ –æ—Ç–¥–µ–ª–∞ –í–≠–î",
                    "department": "–û—Ç–¥–µ–ª –í–≠–î",
                    "email": "ved_head@almazgeobur.ru",
                    "phone": "+7 (495) 123-45-72",
                    "sort_order": 6
                },
                {
                    "first_name": "–ê–ª–µ–∫—Å–µ–π",
                    "last_name": "–í–æ–ª–∫–æ–≤",
                    "middle_name": "–ù–∏–∫–æ–ª–∞–µ–≤–∏—á",
                    "position": "–ù–∞—á–∞–ª—å–Ω–∏–∫ –æ—Ç–¥–µ–ª–∞ –∑–∞–∫—É–ø–æ–∫",
                    "department": "–û—Ç–¥–µ–ª –∑–∞–∫—É–ø–æ–∫",
                    "email": "procurement_head@almazgeobur.ru",
                    "phone": "+7 (495) 123-45-73",
                    "sort_order": 7
                },
                {
                    "first_name": "–°–≤–µ—Ç–ª–∞–Ω–∞",
                    "last_name": "–ù–æ–≤–∏–∫–æ–≤–∞",
                    "middle_name": "–ü–µ—Ç—Ä–æ–≤–Ω–∞",
                    "position": "–í–µ–¥—É—â–∏–π –∏–Ω–∂–µ–Ω–µ—Ä-—Ç–µ—Ö–Ω–æ–ª–æ–≥",
                    "department": "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª",
                    "email": "tech_lead@almazgeobur.ru",
                    "phone": "+7 (495) 123-45-74",
                    "sort_order": 8
                },
                {
                    "first_name": "–ò–≥–æ—Ä—å",
                    "last_name": "–§–µ–¥–æ—Ä–æ–≤",
                    "middle_name": "–í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á",
                    "position": "–°—Ç–∞—Ä—à–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º",
                    "department": "–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂",
                    "email": "senior_sales@almazgeobur.ru",
                    "phone": "+7 (495) 123-45-75",
                    "sort_order": 9
                },
                {
                    "first_name": "–ù–∞—Ç–∞–ª—å—è",
                    "last_name": "–ö—É–∑–Ω–µ—Ü–æ–≤–∞",
                    "middle_name": "–°–µ—Ä–≥–µ–µ–≤–Ω–∞",
                    "position": "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –í–≠–î",
                    "department": "–û—Ç–¥–µ–ª –í–≠–î",
                    "email": "ved_specialist@almazgeobur.ru",
                    "phone": "+7 (495) 123-45-76",
                    "sort_order": 10
                }
            ]
            
            created_employees = []
            for emp_data in employees:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫
                result = await db.execute(
                    text("SELECT id FROM company_employees WHERE first_name = :first_name AND last_name = :last_name"),
                    {"first_name": emp_data["first_name"], "last_name": emp_data["last_name"]}
                )
                existing = result.fetchone()
                
                if not existing:
                    dept_id = dept_map.get(emp_data["department"])
                    
                    employee = CompanyEmployee(
                        first_name=emp_data["first_name"],
                        last_name=emp_data["last_name"],
                        middle_name=emp_data["middle_name"],
                        position=emp_data["position"],
                        department_id=dept_id,
                        email=emp_data["email"],
                        phone=emp_data["phone"],
                        is_active=True,
                        sort_order=emp_data["sort_order"]
                    )
                    
                    db.add(employee)
                    await db.flush()
                    created_employees.append(employee)
                    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫: {employee.full_name} - {employee.position}")
                else:
                    print(f"‚ÑπÔ∏è –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {emp_data['first_name']} {emp_data['last_name']}")
            
            await db.commit()
            print(f"\nüéâ –°–æ–∑–¥–∞–Ω–æ {len(created_employees)} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ '–û –Ω–∞—Å'!")
            
            # –í—ã–≤–æ–¥–∏–º —Å–≤–æ–¥–∫—É –ø–æ –æ—Ç–¥–µ–ª–∞–º
            print("\nüìã –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –ø–æ –æ—Ç–¥–µ–ª–∞–º:")
            for dept_name, dept_id in dept_map.items():
                result = await db.execute(
                    text("SELECT first_name, last_name, middle_name, position FROM company_employees WHERE department_id = :dept_id AND is_active = true ORDER BY sort_order"),
                    {"dept_id": dept_id}
                )
                employees_in_dept = result.fetchall()
                print(f"\n  {dept_name}:")
                for emp in employees_in_dept:
                    full_name = f"{emp[1]} {emp[0]} {emp[2]}" if emp[2] else f"{emp[1]} {emp[0]}"
                    print(f"    - {full_name} - {emp[3]}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö '–û –Ω–∞—Å': {e}")
        import traceback
        traceback.print_exc()
        raise

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–∞ '–û –Ω–∞—Å'...")
    
    try:
        await create_about_data()
        print("\nüéâ –î–∞–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª–∞ '–û –Ω–∞—Å' —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main())
