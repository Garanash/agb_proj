#!/bin/bash

echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ –° –ë–û–ö–û–í–´–ú –ú–ï–ù–Æ –ù–ê –°–ï–†–í–ï–†–ï"
echo "==============================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
if [ $# -eq 0 ]; then
    echo "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞!"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "  $0 <server_ip> [username]"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 89.23.99.86"
    echo "  $0 89.23.99.86 root"
    echo ""
    exit 1
fi

SERVER_IP=$1
USERNAME=${2:-root}
PROJECT_PATH="/root/agb_proj"

echo "üåê –°–µ—Ä–≤–µ—Ä: $SERVER_IP"
echo "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $USERNAME"
echo "üìÅ –ü—É—Ç—å: $PROJECT_PATH"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É..."
if ! ssh -o ConnectTimeout=10 -o BatchMode=yes $USERNAME@$SERVER_IP "echo '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ'" 2>/dev/null; then
    echo "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $SERVER_IP"
    exit 1
fi

echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É —É—Å–ø–µ—à–Ω–æ"

# 1. –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo ""
echo "üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
ssh $USERNAME@$SERVER_IP "cd $PROJECT_PATH && git fetch origin && git reset --hard origin/master"

# 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã –æ–±–Ω–æ–≤–∏–ª–∏—Å—å
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
ssh $USERNAME@$SERVER_IP "cd $PROJECT_PATH && echo 'AppLayout.tsx:' && grep -n 'getSimpleApiUrl' frontend/components/AppLayout.tsx && echo 'api.ts:' && grep -n 'getSimpleApiUrl' frontend/src/utils/api.ts"

# 3. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo ""
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
ssh $USERNAME@$SERVER_IP "cd $PROJECT_PATH && docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env down"

# 4. –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º frontend
echo ""
echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ frontend..."
ssh $USERNAME@$SERVER_IP "cd $PROJECT_PATH && docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env build --no-cache frontend"

# 5. –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
ssh $USERNAME@$SERVER_IP "cd $PROJECT_PATH && docker-compose -f config/docker/docker-compose.prod.yml --env-file config/env/production.env up -d"

# 6. –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (60 —Å–µ–∫—É–Ω–¥)..."
sleep 60

# 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
ssh $USERNAME@$SERVER_IP "cd $PROJECT_PATH && docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'"

# 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º health checks
echo ""
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ health checks..."
for service in postgres redis backend frontend nginx; do
    container_name="agb_${service}_prod"
    health=$(ssh $USERNAME@$SERVER_IP "cd $PROJECT_PATH && docker inspect --format='{{.State.Health.Status}}' $container_name 2>/dev/null || echo 'no-health-check'")
    echo "  $service: $health"
done

# 9. –¢–µ—Å—Ç–∏—Ä—É–µ–º API
echo ""
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
HEALTH_RESPONSE=$(ssh $USERNAME@$SERVER_IP "curl -s http://$SERVER_IP:8000/api/health" || echo "error")

if [[ "$HEALTH_RESPONSE" == *"healthy"* ]]; then
    echo "‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Backend API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    echo "   –û—Ç–≤–µ—Ç: $HEALTH_RESPONSE"
fi

# 10. –¢–µ—Å—Ç–∏—Ä—É–µ–º frontend
echo ""
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ frontend..."
FRONTEND_RESPONSE=$(ssh $USERNAME@$SERVER_IP "curl -s -I http://$SERVER_IP | head -1" || echo "error")

if [[ "$FRONTEND_RESPONSE" == *"200"* ]] || [[ "$FRONTEND_RESPONSE" == *"HTTP"* ]]; then
    echo "‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    echo "   –û—Ç–≤–µ—Ç: $FRONTEND_RESPONSE"
fi

echo ""
echo "üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:"
echo "  - Frontend: http://$SERVER_IP"
echo "  - Backend API: http://$SERVER_IP:8000"
echo "  - API Docs: http://$SERVER_IP:8000/docs"
echo ""
echo "üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:"
echo "  - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin / admin123"
echo "  - –ú–µ–Ω–µ–¥–∂–µ—Ä 1: manager1 / ManagerPass123!"
echo "  - –ú–µ–Ω–µ–¥–∂–µ—Ä 2: manager2 / ManagerPass123!"
echo "  - –°–æ—Ç—Ä—É–¥–Ω–∏–∫ 1: employee1 / EmployeePass123!"
echo "  - –°–æ—Ç—Ä—É–¥–Ω–∏–∫ 2: employee2 / EmployeePass123!"
echo "  - –í–≠–î —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç: ved_passport1 / VedPass123!"
echo "  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: user1 / UserPass123!"
echo ""
echo "üìù –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:"
echo "  1. –õ–æ–≥–∏ frontend: docker logs agb_frontend_prod"
echo "  2. –õ–æ–≥–∏ backend: docker logs agb_backend_prod"
echo "  3. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: docker exec agb_frontend_prod env | grep NEXT_PUBLIC"
