#!/bin/bash

# –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./full-diagnosis-and-fix.sh

set -e

echo "üîç –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º"
echo "==============================================="

# –ü–æ–ª—É—á–∞–µ–º IPv4 IP —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP=$(curl -s -4 ifconfig.me || curl -s -4 ipinfo.io/ip || curl -s -4 icanhazip.com || echo "localhost")
echo "üåê IPv4 IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"

echo ""
echo "üìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "-------------------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã
check_port() {
    local port=$1
    local service=$2
    if ss -tuln | grep -q ":$port " || lsof -i :$port >/dev/null 2>&1; then
        echo "‚úÖ –ü–æ—Ä—Ç $port ($service) - –æ—Ç–∫—Ä—ã—Ç"
        local pid=$(lsof -ti :$port 2>/dev/null)
        if [ ! -z "$pid" ]; then
            echo "   PID: $pid"
        fi
    else
        echo "‚ùå –ü–æ—Ä—Ç $port ($service) - –∑–∞–∫—Ä—ã—Ç"
    fi
}

check_port 3000 "Frontend"
check_port 8000 "Backend API"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
check_http() {
    local url=$1
    local service=$2
    if curl -s --connect-timeout 5 "$url" > /dev/null; then
        echo "‚úÖ $service ($url) - –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        echo "‚ùå $service ($url) - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
}

check_http "http://$SERVER_IP:3000" "Frontend"
check_http "http://$SERVER_IP:8000/api/v1/health" "Backend API"

echo ""
echo "üìã –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
echo "-------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
check_process() {
    local pattern=$1
    local service=$2
    if pgrep -f "$pattern" > /dev/null; then
        echo "‚úÖ $service - –∑–∞–ø—É—â–µ–Ω"
        local pid=$(pgrep -f "$pattern")
        echo "   PID: $pid"
    else
        echo "‚ùå $service - –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
}

check_process "uvicorn main:app" "Backend (uvicorn)"
check_process "npm start" "Frontend (npm)"
check_process "next start" "Frontend (next)"

echo ""
echo "üìã –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ backend"
echo "-----------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ backend
if [ -f "backend.log" ]; then
    echo "‚úÖ backend.log –Ω–∞–π–¥–µ–Ω"
    echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤ backend:"
    tail -10 backend.log
else
    echo "‚ùå backend.log –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "üìã –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
echo "------------------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -f ".env.production" ]; then
    echo "‚úÖ .env.production –Ω–∞–π–¥–µ–Ω"
    if grep -q "NEXT_PUBLIC_API_URL" .env.production; then
        API_URL=$(grep "NEXT_PUBLIC_API_URL" .env.production | cut -d'=' -f2)
        echo "üìã NEXT_PUBLIC_API_URL: $API_URL"
    else
        echo "‚ùå NEXT_PUBLIC_API_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ .env.production"
    fi
else
    echo "‚ùå .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "üìã –®–∞–≥ 5: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º"
echo "-------------------------"

# –ï—Å–ª–∏ backend –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –µ–≥–æ
if ! curl -s --connect-timeout 5 "http://$SERVER_IP:8000/api/v1/health" > /dev/null; then
    echo "üîß Backend –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º..."
    ./scripts/production/start-backend-if-needed.sh
else
    echo "‚úÖ Backend —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
fi

# –ï—Å–ª–∏ frontend –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –µ–≥–æ
if ! curl -s --connect-timeout 5 "http://$SERVER_IP:3000" > /dev/null; then
    echo "üîß Frontend –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º..."
    ./scripts/production/start-frontend-simple.sh
else
    echo "‚úÖ Frontend —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
fi

echo ""
echo "üìã –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ CORS"
echo "-------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º CORS
echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CORS..."
CORS_RESPONSE=$(curl -s -H "Origin: http://$SERVER_IP" -H "Access-Control-Request-Method: POST" -H "Access-Control-Request-Headers: Content-Type" -X OPTIONS "http://$SERVER_IP:8000/api/v1/auth/login" -I)
if echo "$CORS_RESPONSE" | grep -q "Access-Control-Allow-Origin"; then
    echo "‚úÖ CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
    echo "üìã CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏:"
    echo "$CORS_RESPONSE" | grep -i "access-control"
else
    echo "‚ùå CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ"
    echo "üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$CORS_RESPONSE"
fi

echo ""
echo "üìã –®–∞–≥ 7: –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É"
echo "---------------------------"

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É..."
LOGIN_TEST=$(curl -s -X POST "http://$SERVER_IP:8000/api/v1/auth/login" \
    -H "Content-Type: application/json" \
    -H "Origin: http://$SERVER_IP" \
    -d '{"username":"admin","password":"admin"}' 2>/dev/null)

if echo "$LOGIN_TEST" | grep -q "access_token"; then
    echo "‚úÖ –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É –Ω–µ –ø—Ä–æ—à–µ–ª"
    echo "üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:"
    echo "$LOGIN_TEST"
fi

echo ""
echo "üìã –®–∞–≥ 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ API URL –≤ frontend"
echo "----------------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–æ–π API URL –∏—Å–ø–æ–ª—å–∑—É–µ—Ç frontend
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API URL –≤ frontend..."
if curl -s "http://$SERVER_IP:3000" | grep -q "localhost:8000"; then
    echo "‚ùå Frontend –≤—Å–µ –µ—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç localhost:8000"
    echo "üîß –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º frontend —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º API URL..."
    cd frontend
    export NEXT_PUBLIC_API_URL="http://$SERVER_IP:8000/api"
    npm run build
    cd ..
    echo "‚úÖ Frontend –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω"
else
    echo "‚úÖ Frontend –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API URL"
fi

echo ""
echo "‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "Frontend: http://$SERVER_IP:3000"
echo "Backend: http://$SERVER_IP:8000/api/v1/health"
echo "Swagger: http://$SERVER_IP:8000/docs"
echo ""
echo "üìã –ï—Å–ª–∏ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:"
echo "http://$SERVER_IP:3000"
echo ""
echo "üìã –õ–æ–≥–∏:"
echo "Frontend: npm start (–≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ)"
echo "Backend: tail -f backend.log"
