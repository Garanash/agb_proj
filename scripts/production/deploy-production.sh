#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω –¥–µ–ø–ª–æ—è
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy-production.sh

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω –¥–µ–ø–ª–æ—è AGB"
echo "============================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env.production" ]; then
    echo "‚ùå –§–∞–π–ª .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./create-env.sh"
    exit 1
fi

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
export $(cat .env.production | grep -v '^#' | xargs)

echo "üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
echo "   - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $POSTGRES_DB –Ω–∞ $POSTGRES_HOST:$POSTGRES_PORT"
echo "   - Redis: $REDIS_HOST:$REDIS_PORT"
echo "   - N8N: $N8N_HOST:$N8N_PORT"
echo "   - Backend: $BACKEND_HOST:$BACKEND_PORT"
echo "   - Frontend: $FRONTEND_HOST:$FRONTEND_PORT"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.production.yml down

# –û—á–∏—â–∞–µ–º Docker —Å–µ—Ç–∏ (–∏—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç IP)
echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Å–µ—Ç–µ–π..."
docker network prune -f

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p logs/nginx
mkdir -p uploads/{ai_processing,documents,portfolio,profiles}

# –ó–∞–ø—É—Å–∫–∞–µ–º Docker —Å–µ—Ä–≤–∏—Å—ã
echo "üê≥ –ó–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f docker-compose.production.yml up -d

# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f docker-compose.production.yml ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
until docker exec agb_postgres pg_isready -U $POSTGRES_USER -d $POSTGRES_DB; do
    echo "   –û–∂–∏–¥–∞–Ω–∏–µ PostgreSQL..."
    sleep 2
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis
echo "üî¥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis..."
until docker exec agb_redis redis-cli ping; do
    echo "   –û–∂–∏–¥–∞–Ω–∏–µ Redis..."
    sleep 2
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º N8N
echo "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ N8N..."
until curl -f http://localhost:5678/healthz 2>/dev/null; do
    echo "   –û–∂–∏–¥–∞–Ω–∏–µ N8N..."
    sleep 2
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Nginx
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ Nginx..."
until curl -f http://localhost/health 2>/dev/null; do
    echo "   –û–∂–∏–¥–∞–Ω–∏–µ Nginx..."
    sleep 2
done

echo ""
echo "‚úÖ Docker —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "   - –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost"
echo "   - API: http://localhost/api"
echo "   - N8N: http://localhost/n8n"
echo "   - Health check: http://localhost/health"
echo ""
echo "üìä –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "   docker-compose -f docker-compose.production.yml logs -f"
echo ""
echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:"
echo "   docker-compose -f docker-compose.production.yml down"
