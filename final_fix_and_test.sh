#!/bin/bash
# –§–ò–ù–ê–õ–¨–ù–´–ô –°–ö–†–ò–ü–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
# –°–æ–∑–¥–∞–µ—Ç –±–∞–∑—É –∑–∞–Ω–æ–≤–æ –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏

echo "üöÄ –§–ò–ù–ê–õ–¨–ù–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï"
echo "======================================="

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
find_project_dir() {
    if [ -f "docker-compose.yml" ] && [ -d "backend" ] && [ -d "frontend" ]; then
        echo "$(pwd)"
        return 0
    fi

    for dir in "/root/agb_proj" "/root/agb_platform" "/home/agb_proj" "/home/agb_platform"; do
        if [ -d "$dir" ] && [ -f "$dir/docker-compose.yml" ]; then
            echo "$dir"
            return 0
        fi
    done

    current_dir="$(pwd)"
    while [ "$current_dir" != "/" ]; do
        if [ -f "$current_dir/docker-compose.yml" ] && [ -d "$current_dir/backend" ]; then
            echo "$current_dir"
            return 0
        fi
        current_dir="$(dirname "$current_dir")"
    done

    return 1
}

PROJECT_DIR=$(find_project_dir)

if [ -z "$PROJECT_DIR" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞!"
    exit 1
fi

echo "‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ–µ–∫—Ç: $PROJECT_DIR"
cd "$PROJECT_DIR"

# 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
pip install asyncpg python-dotenv httpx || echo "‚ö†Ô∏è  –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# 2. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo "üõë 2. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose down

# 3. –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∑–∞–Ω–æ–≤–æ
echo "üîÑ 3. –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–Ω–æ–≤–æ..."
python create_database_from_scratch.py

# 4. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo "üöÄ 4. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose up -d

# 5. –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ 5. –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞..."
sleep 30

# 6. –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
echo "üë§ 6. –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
python create_admin_db.py

# 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É
echo "üß™ 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã..."
sleep 10

# –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
echo "   –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é..."
TOKEN=$(curl -s -X POST http://localhost/api/auth/login \
    -H "Content-Type: application/json" \
    -d '{"username": "admin", "password": "admin123"}' | grep -o '"access_token":"[^"]*"' | cut -d'"' -f4)

if [ ! -z "$TOKEN" ]; then
    echo "   ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç"

    # –¢–µ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–∞—Ç–∞
    echo "   –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–∞—Ç–∞..."
    USERS_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" http://localhost/api/users/chat-users/)
    if echo "$USERS_RESPONSE" | grep -q "first_name\|username"; then
        echo "   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —á–∞—Ç–∞ —Ä–∞–±–æ—Ç–∞—é—Ç"
    else
        echo "   ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —á–∞—Ç–∞ –ù–ï —Ä–∞–±–æ—Ç–∞—é—Ç: $USERS_RESPONSE"
    fi

    # –¢–µ—Å—Ç —á–∞—Ç–æ–≤
    echo "   –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–∞—Ç—ã..."
    ROOMS_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" http://localhost/api/chat/rooms/)
    if echo "$ROOMS_RESPONSE" | grep -q "id\|null\|[]"; then
        echo "   ‚úÖ –ß–∞—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç"
    else
        echo "   ‚ùå –ß–∞—Ç—ã –ù–ï —Ä–∞–±–æ—Ç–∞—é—Ç: $ROOMS_RESPONSE"
    fi

    # –¢–µ—Å—Ç –ø–∞–ø–æ–∫ —á–∞—Ç–æ–≤
    echo "   –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞–ø–∫–∏ —á–∞—Ç–æ–≤..."
    FOLDERS_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" http://localhost/api/chat/folders/)
    if echo "$FOLDERS_RESPONSE" | grep -q "id\|null\|[]"; then
        echo "   ‚úÖ –ü–∞–ø–∫–∏ —á–∞—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç"
    else
        echo "   ‚ùå –ü–∞–ø–∫–∏ —á–∞—Ç–æ–≤ –ù–ï —Ä–∞–±–æ—Ç–∞—é—Ç: $FOLDERS_RESPONSE"
    fi

    # –¢–µ—Å—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    echo "   –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤..."
    EMPLOYEES_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" http://localhost/api/company-employees/)
    if echo "$EMPLOYEES_RESPONSE" | grep -q "first_name\|null\|[]"; then
        echo "   ‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç"
    else
        echo "   ‚ùå –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –ù–ï —Ä–∞–±–æ—Ç–∞—é—Ç: $EMPLOYEES_RESPONSE"
    fi

    # –¢–µ—Å—Ç —Å–æ–±—ã—Ç–∏–π
    echo "   –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è..."
    EVENTS_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" http://localhost/api/events/)
    if echo "$EVENTS_RESPONSE" | grep -q "title\|null\|[]"; then
        echo "   ‚úÖ –°–æ–±—ã—Ç–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç"
    else
        echo "   ‚ùå –°–æ–±—ã—Ç–∏—è –ù–ï —Ä–∞–±–æ—Ç–∞—é—Ç: $EVENTS_RESPONSE"
    fi

    # –¢–µ—Å—Ç –±–æ—Ç–æ–≤
    echo "   –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–æ—Ç–æ–≤..."
    BOTS_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" http://localhost/api/chat/bots/)
    if echo "$BOTS_RESPONSE" | grep -q "name\|null\|[]"; then
        echo "   ‚úÖ –ë–æ—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç"
    else
        echo "   ‚ùå –ë–æ—Ç—ã –ù–ï —Ä–∞–±–æ—Ç–∞—é—Ç: $BOTS_RESPONSE"
    fi

else
    echo "   ‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo ""
echo "üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo "==========================="
echo ""
echo "üåê –î–û–°–¢–£–ü –ö –°–ò–°–¢–ï–ú–ï:"
echo "   URL: http://localhost/login"
echo "   –õ–æ–≥–∏–Ω: admin"
echo "   –ü–∞—Ä–æ–ª—å: admin123"
echo ""
echo "üìã –ü–†–û–í–ï–†–¨–¢–ï –í –ë–†–ê–£–ó–ï–†–ï:"
echo "   1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo "   2. –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞ - —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"
echo "   3. –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è - —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"
echo "   4. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ - —Ñ–æ—Ä–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo "   5. –í—Å–µ API endpoints –¥–æ—Å—Ç—É–ø–Ω—ã"
echo ""
echo "üéØ –í–°–ï –ü–†–û–ë–õ–ï–ú–´ –î–û–õ–ñ–ù–´ –ë–´–¢–¨ –ò–°–ü–†–ê–í–õ–ï–ù–´!"
